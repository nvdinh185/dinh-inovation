{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-spinner.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, c as getIonMode, h, H as Host } from './core-feeeff0d.js';\nimport { b as config } from './config-3c7f3790.js';\nimport { c as createColorClasses } from './theme-18cbe2cc.js';\n\nconst spinners = {\r\n    'bubbles': {\r\n        dur: 1000,\r\n        circles: 9,\r\n        fn: (dur, index, total) => {\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            const angle = 2 * Math.PI * index / total;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circles': {\r\n        dur: 1000,\r\n        circles: 8,\r\n        fn: (dur, index, total) => {\r\n            const step = index / total;\r\n            const animationDelay = `${(dur * step) - dur}ms`;\r\n            const angle = 2 * Math.PI * step;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circular': {\r\n        dur: 1400,\r\n        elmDuration: true,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 20,\r\n                cx: 44,\r\n                cy: 44,\r\n                fill: 'none',\r\n                viewBox: '22 22 44 44',\r\n                transform: 'translate(0,0)',\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'crescent': {\r\n        dur: 750,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 26,\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'dots': {\r\n        dur: 750,\r\n        circles: 3,\r\n        fn: (_, index) => {\r\n            const animationDelay = -(110 * index) + 'ms';\r\n            return {\r\n                r: 6,\r\n                style: {\r\n                    'left': `${9 - (9 * index)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 17,\r\n                y2: 29,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines-small': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 12,\r\n                y2: 20,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nconst SPINNERS = spinners;\n\nconst Spinner = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * If `true`, the spinner's animation will be paused.\n         */\n        this.paused = false;\n    }\n    getName() {\n        const spinnerName = this.name || config.get('spinner');\n        const mode = getIonMode(this);\n        if (spinnerName) {\n            return spinnerName;\n        }\n        return (mode === 'ios') ? 'lines' : 'circular';\n    }\n    render() {\n        const self = this;\n        const mode = getIonMode(self);\n        const spinnerName = self.getName();\n        const spinner = SPINNERS[spinnerName] || SPINNERS['lines'];\n        const duration = (typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur);\n        const svgs = [];\n        if (spinner.circles !== undefined) {\n            for (let i = 0; i < spinner.circles; i++) {\n                svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n            }\n        }\n        else if (spinner.lines !== undefined) {\n            for (let i = 0; i < spinner.lines; i++) {\n                svgs.push(buildLine(spinner, duration, i, spinner.lines));\n            }\n        }\n        return (h(Host, { class: Object.assign(Object.assign({}, createColorClasses(self.color)), { [mode]: true, [`spinner-${spinnerName}`]: true, 'spinner-paused': !!self.paused || config.getBoolean('_testing') }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\n    }\n    static get style() { return \":host{display:inline-block;position:relative;width:28px;height:28px;color:var(--color);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.ion-color){color:var(--ion-color-base)}svg{left:0;top:0;-webkit-transform-origin:center;transform-origin:center;position:absolute;width:100%;height:100%;-webkit-transform:translateZ(0);transform:translateZ(0)}:host-context([dir=rtl]) svg,[dir=rtl] svg{left:unset;right:unset;right:0;-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}:host(.spinner-lines) line,:host(.spinner-lines-small) line{stroke-width:4px;stroke-linecap:round;stroke:currentColor}:host(.spinner-lines) svg,:host(.spinner-lines-small) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite}:host(.spinner-bubbles) svg{-webkit-animation:spinner-scale-out 1s linear infinite;animation:spinner-scale-out 1s linear infinite;fill:currentColor}:host(.spinner-circles) svg{-webkit-animation:spinner-fade-out 1s linear infinite;animation:spinner-fade-out 1s linear infinite;fill:currentColor}:host(.spinner-crescent) circle{fill:transparent;stroke-width:4px;stroke-dasharray:128px;stroke-dashoffset:82px;stroke:currentColor}:host(.spinner-crescent) svg{-webkit-animation:spinner-rotate 1s linear infinite;animation:spinner-rotate 1s linear infinite}:host(.spinner-dots) circle{stroke-width:0;fill:currentColor}:host(.spinner-dots) svg{-webkit-animation:spinner-dots 1s linear infinite;animation:spinner-dots 1s linear infinite}:host(.spinner-circular){-webkit-animation:spinner-circular linear infinite;animation:spinner-circular linear infinite}:host(.spinner-circular) circle{-webkit-animation:spinner-circular-inner ease-in-out infinite;animation:spinner-circular-inner ease-in-out infinite;stroke:currentColor;stroke-dasharray:80px,200px;stroke-dashoffset:0px;stroke-width:3.6;fill:none}:host(.spinner-paused),:host(.spinner-paused) circle,:host(.spinner-paused) svg{-webkit-animation-play-state:paused;animation-play-state:paused}\\@-webkit-keyframes spinner-fade-out{0%{opacity:1}to{opacity:0}}\\@keyframes spinner-fade-out{0%{opacity:1}to{opacity:0}}\\@-webkit-keyframes spinner-scale-out{0%{-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:scale(0);transform:scale(0)}}\\@keyframes spinner-scale-out{0%{-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:scale(0);transform:scale(0)}}\\@-webkit-keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}\\@keyframes spinner-rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}\\@-webkit-keyframes spinner-dots{0%{-webkit-transform:scale(1);transform:scale(1);opacity:.9}50%{-webkit-transform:scale(.4);transform:scale(.4);opacity:.3}to{-webkit-transform:scale(1);transform:scale(1);opacity:.9}}\\@keyframes spinner-dots{0%{-webkit-transform:scale(1);transform:scale(1);opacity:.9}50%{-webkit-transform:scale(.4);transform:scale(.4);opacity:.3}to{-webkit-transform:scale(1);transform:scale(1);opacity:.9}}\\@-webkit-keyframes spinner-circular{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}\\@keyframes spinner-circular{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}\\@-webkit-keyframes spinner-circular-inner{0%{stroke-dasharray:1px,200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px,200px;stroke-dashoffset:-15px}to{stroke-dasharray:100px,200px;stroke-dashoffset:-125px}}\\@keyframes spinner-circular-inner{0%{stroke-dasharray:1px,200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px,200px;stroke-dashoffset:-15px}to{stroke-dasharray:100px,200px;stroke-dashoffset:-125px}}\"; }\n};\nconst buildCircle = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\n};\nconst buildLine = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\n};\n\nexport { Spinner as ion_spinner };\n"],"sourceRoot":"webpack:///","file":"64-es5.js"}