{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-reorder_2-md.entry.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;IAAA;;;IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;MAAA,OAAA,OAAA;IAAA,CAAA;IAAA;;;IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,mBAAA,EAAA,YAAA;MAAA,OAAA,YAAA;IAAA,CAAA;IAAA;;;IAAA,IAAA,8CAAA,GAAA,mBAAA;IAAA;IAAA,sDAAA,CAAA;IAAA;;;IAAA,IAAA,gDAAA,GAAA,mBAAA;IAAA;IAAA,wDAAA,CAAA;IAAA;;;IAAA,IAAA,gDAAA,GAAA,mBAAA;IAAA;IAAA,wDAAA,CAAA;;IAIA,IAAA,OAAA;MACA,iBAAA,OAAA,EAAA;QAAA;;QACQ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,EAAgB,OAAhB;MACR;;MAHA;QAAA;QAAA,OAIA,iBAAA,EAAA,EAAA;UACA,EAAA,CAAA,cAAA;UACA,EAAA,CAAA,wBAAA;QACA;MAPA;QAAA;QAAA,OAQA,kBAAA;UACA,OAAgB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,8CAAA,CAAA,GAAA,CAAF,EAAM;YAAG,SAAQ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV;UAAX,CAAN,EAAqC,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,MAAD,EAAC,IAAD,EAAgB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAC,UAAD,EAAC;YAAc,IAAA,EAAA,SAAd;YAAc,IAAA,EAAA,KAAd;YAAc,SAAA;UAAd,CAAD,CAAhB,CAArC,CAAhB;QACA;MAVA;QAAA;QAAA,KAWA,eAAA;UAAwB,OAAA,4HAAA;QAAqI;MAX7J;;MAAA;IAAA,GAAA;;IAcA,IAAA,YAAA;MACA,sBAAA,OAAA,EAAA;QAAA;;QACQ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAgB,IAAhB,EAAgB,OAAhB;QACR,KAAA,WAAA,GAAA,CAAA,CAAA;QACA,KAAA,aAAA,GAAA,EAAA;QACA,KAAA,WAAA,GAAA,CAAA;QACA,KAAA,cAAA,GAAA,CAAA;QACA,KAAA,eAAA,GAAA,CAAA;QACA,KAAA,YAAA,GAAA,CAAA;QACA,KAAA,eAAA,GAAA,CAAA;QACA,KAAA,KAAA,GAAA;QAAA;QAAA;QACA;AACA;AACA;;QACA,KAAA,QAAA,GAAA,IAAA;QACA,KAAA,cAAA,GAA8B,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAW,IAAX,EAAW,gBAAX,EAAW,CAAX,CAA9B;MACA;;MAhBA;QAAA;QAAA,OAiBA,2BAAA;UACA,IAAA,KAAA,OAAA,EAAA;YACA,KAAA,OAAA,CAAA,WAAA,CAAA,KAAA,QAAA;UACA;QACA;MArBA;QAAA;QAAA;UAAA,oFAsBA;YAAA;;YAAA;YAAA;cAAA;gBAAA;kBAAA;oBACA,SADA,GACA,KAAA,EAAA,CAAA,OAAA,CAAA,aAAA,CADA;;oBAAA,KAEA,SAFA;sBAAA;sBAAA;oBAAA;;oBAAA;oBAAA,OAGA,SAAA,CAAA,gBAAA,EAHA;;kBAAA;oBAGA,KAAA,QAHA;;kBAAA;oBAAA;oBAAA,OAK8B,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,IAAA;oBAAA;oBAAA,uDAAA,CAAA,CAL9B;;kBAAA;oBAKA,KAAA,OALA,iBAK2D,aAL3D,CAK2D;sBAC3D,EAAA,EAAA,KAAA,EAD2D;sBAE3D,WAAA,EAAA,SAF2D;sBAG3D,eAAA,EAAA,GAH2D;sBAI3D,SAAA,EAAA,CAJ2D;sBAK3D,SAAA,EAAA,GAL2D;sBAM3D,OAAA,EAAA,KAN2D;sBAO3D,QAAA,EAAA,kBAAA,MAAA;wBAAA,OAAA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA;sBAAA,CAP2D;sBAQ3D,OAAA,EAAA,iBAAA,EAAA;wBAAA,OAAA,KAAA,CAAA,OAAA,CAAA,EAAA,CAAA;sBAAA,CAR2D;sBAS3D,MAAA,EAAA,gBAAA,EAAA;wBAAA,OAAA,KAAA,CAAA,MAAA,CAAA,EAAA,CAAA;sBAAA,CAT2D;sBAU3D,KAAA,EAAA;wBAAA,OAAA,KAAA,CAAA,KAAA,EAAA;sBAAA;oBAV2D,CAL3D;oBAiBA,KAAA,eAAA;;kBAjBA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA,CAtBA;;UAAA;YAAA;UAAA;;UAAA;QAAA;MAAA;QAAA;QAAA,OAyCA,gCAAA;UACA,KAAA,KAAA;;UACA,IAAA,KAAA,OAAA,EAAA;YACA,KAAA,OAAA,CAAA,OAAA;YACA,KAAA,OAAA,GAAA,SAAA;UACA;QACA;QACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MA5DA;QAAA;QAAA,OA6DA,kBAAA,aAAA,EAAA;UACA,OAAA,OAAA,CAAA,OAAA,CAAA,KAAA,YAAA,CAAA,aAAA,CAAA,CAAA;QACA;MA/DA;QAAA;QAAA,OAgEA,kBAAA,EAAA,EAAA;UACA,IAAA,KAAA,cAAA,IAAA,KAAA,KAAA,KAAA;UAAA;UAAA,EAAA;YACA,OAAA,KAAA;UACA;;UACA,IAAA,MAAA,GAAA,EAAA,CAAA,KAAA,CAAA,MAAA;UACA,IAAA,SAAA,GAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA;;UACA,IAAA,CAAA,SAAA,EAAA;YACA,OAAA,KAAA;UACA;;UACA,IAAA,IAAA,GAAA,eAAA,CAAA,SAAA,EAAA,KAAA,EAAA,CAAA;;UACA,IAAA,CAAA,IAAA,EAAA;YACA,OAAA,KAAA;UACA;;UACA,EAAA,CAAA,IAAA,GAAA,IAAA;UACA,OAAA,IAAA;QACA;MA/EA;QAAA;QAAA,OAgFA,iBAAA,EAAA,EAAA;UACA,EAAA,CAAA,KAAA,CAAA,cAAA;UACA,IAAA,IAAA,GAAA,KAAA,cAAA,GAAA,EAAA,CAAA,IAAA;UACA,IAAA,OAAA,GAAA,KAAA,aAAA;UACA,OAAA,CAAA,MAAA,GAAA,CAAA;UACA,IAAA,EAAA,GAAA,KAAA,EAAA;UACA,IAAA,QAAA,GAAA,EAAA,CAAA,QAAA;;UACA,IAAA,CAAA,QAAA,IAAA,QAAA,CAAA,MAAA,KAAA,CAAA,EAAA;YACA;UACA;;UACA,IAAA,GAAA,GAAA,CAAA;;UACA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAuB,CAAA,GAAA,QAAA,CAAA,MAAvB,EAA4C,CAAA,EAA5C,EAA4C;YAC5C,IAAA,KAAA,GAAA,QAAA,CAAA,CAAA,CAAA;YACA,GAAA,IAAA,KAAA,CAAA,YAAA;YACA,OAAA,CAAA,IAAA,CAAA,GAAA;YACA,KAAA,CAAA,SAAA,GAAA,CAAA;UACA;;UACA,IAAA,GAAA,GAAA,EAAA,CAAA,qBAAA,EAAA;UACA,KAAA,YAAA,GAAA,GAAA,CAAA,GAAA;UACA,KAAA,eAAA,GAAA,GAAA,CAAA,MAAA;;UACA,IAAA,KAAA,QAAA,EAAA;YACA,IAAA,SAAA,GAAA,KAAA,QAAA,CAAA,qBAAA,EAAA;YACA,KAAA,eAAA,GAAA,KAAA,QAAA,CAAA,SAAA;YACA,KAAA,WAAA,GAAA,SAAA,CAAA,GAAA,GAAA,kBAAA;YACA,KAAA,cAAA,GAAA,SAAA,CAAA,MAAA,GAAA,kBAAA;UACA,CALA,MAMA;YACA,KAAA,eAAA,GAAA,CAAA;YACA,KAAA,WAAA,GAAA,CAAA;YACA,KAAA,cAAA,GAAA,CAAA;UACA;;UACA,KAAA,WAAA,GAAA,YAAA,CAAA,IAAA,CAAA;UACA,KAAA,kBAAA,GAAA,IAAA,CAAA,YAAA;UACA,KAAA,KAAA,GAAA;UAAA;UAAA;UACA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,qBAAA;UACQ,MAAA,CAAA,gDAAA,CAAA,GAAA,CAAA,CAAA;QACR;MApHA;QAAA;QAAA,OAqHA,gBAAA,EAAA,EAAA;UACA,IAAA,YAAA,GAAA,KAAA,cAAA;;UACA,IAAA,CAAA,YAAA,EAAA;YACA;UACA,CAJA,CAKA;;;UACA,IAAA,MAAA,GAAA,KAAA,UAAA,CAAA,EAAA,CAAA,QAAA,CAAA,CANA,CAOA;;UACA,IAAA,GAAA,GAAA,KAAA,YAAA,GAAA,MAAA;UACA,IAAA,MAAA,GAAA,KAAA,eAAA,GAAA,MAAA;UACA,IAAA,QAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,QAAA,EAAA,MAAA,CAAA,CAAA;UACA,IAAA,MAAA,GAAA,MAAA,GAAA,QAAA,GAAA,EAAA,CAAA,MAAA;UACA,IAAA,WAAA,GAAA,QAAA,GAAA,GAAA;UACA,IAAA,OAAA,GAAA,KAAA,eAAA,CAAA,WAAA,CAAA;;UACA,IAAA,OAAA,KAAA,KAAA,WAAA,EAAA;YACA,IAAA,SAAA,GAAA,YAAA,CAAA,YAAA,CAAA;YACA,KAAA,WAAA,GAAA,OAAA;YACY,MAAA,CAAA,gDAAA,CAAA,GAAA,CAAA,CAAA;YACZ,KAAA,WAAA,CAAA,SAAA,EAAA,OAAA;UACA,CAnBA,CAoBA;;;UACA,YAAA,CAAA,KAAA,CAAA,SAAA,wBAAqD,MAArD;QACA;MA3IA;QAAA;QAAA,OA4IA,iBAAA;UACA,IAAA,cAAA,GAAA,KAAA,cAAA;UACA,KAAA,KAAA,GAAA;UAAA;UAAA;;UACA,IAAA,CAAA,cAAA,EAAA;YACA,KAAA,KAAA,GAAA;YAAA;YAAA;YACA;UACA;;UACA,IAAA,OAAA,GAAA,KAAA,WAAA;UACA,IAAA,SAAA,GAAA,YAAA,CAAA,cAAA,CAAA;;UACA,IAAA,OAAA,KAAA,SAAA,EAAA;YACA,KAAA,YAAA;UACA,CAFA,MAGA;YACA,KAAA,cAAA,CAAA,IAAA,CAAA;cACA,IAAA,EAAA,SADA;cAEA,EAAA,EAAA,OAFA;cAGA,QAAA,EAAA,KAAA,YAAA,CAAA,IAAA,CAAA,IAAA;YAHA,CAAA;UAKA;;UACQ,MAAA,CAAA,gDAAA,CAAA,GAAA,CAAA,CAAA;QACR;MAhKA;QAAA;QAAA,OAiKA,sBAAA,aAAA,EAAA;UACA,IAAA,cAAA,GAAA,KAAA,cAAA;;UACA,IAAA,cAAA,IAAA,KAAA,KAAA,KAAA;UAAA;UAAA,EAAA;YACA,IAAA,QAAA,GAAA,KAAA,EAAA,CAAA,QAAA;YACA,IAAA,GAAA,GAAA,QAAA,CAAA,MAAA;YACA,IAAA,OAAA,GAAA,KAAA,WAAA;YACA,IAAA,SAAA,GAAA,YAAA,CAAA,cAAA,CAAA;;YACA,IAAA,OAAA,KAAA,SAAA,KAAA,CAAA,aAAA,IAAA,aAAA,KAAA,IAAA,CAAA,EAAA;cACA,IAAA,GAAA,GAAA,SAAA,GAAA,OAAA,GACA,QAAA,CAAA,OAAA,GAAA,CAAA,CADA,GAEA,QAAA,CAAA,OAAA,CAFA;cAGA,KAAA,EAAA,CAAA,YAAA,CAAA,cAAA,EAAA,GAAA;YACA;;YACA,IAAA,KAAA,CAAA,OAAA,CAAA,aAAA,CAAA,EAAA;cACA,aAAA,GAAA,YAAA,CAAA,aAAA,EAAA,SAAA,EAAA,OAAA,CAAA;YACA;;YACA,KAAA,IAAA,CAAA,GAAA,CAAA,EAA2B,CAAA,GAAA,GAA3B,EAAoC,CAAA,EAApC,EAAoC;cACpC,QAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,WAAA,IAAA,EAAA;YACA;;YACA,cAAA,CAAA,KAAA,CAAA,UAAA,GAAA,EAAA;YACA,cAAA,CAAA,SAAA,CAAA,MAAA,CAAA,qBAAA;YACA,KAAA,cAAA,GAAA,SAAA;YACA,KAAA,KAAA,GAAA;YAAA;YAAA;UACA;;UACA,OAAA,aAAA;QACA;MA1LA;QAAA;QAAA,OA2LA,yBAAA,MAAA,EAAA;UACA,IAAA,OAAA,GAAA,KAAA,aAAA;UACA,IAAA,CAAA,GAAA,CAAA,CAFA,CAGA;UACA;UACA;;UACA,KAAA,CAAA,GAAA,CAAA,EAAmB,CAAA,GAAA,OAAA,CAAA,MAAnB,EAAuC,CAAA,EAAvC,EAAuC;YACvC,IAAA,OAAA,CAAA,CAAA,CAAA,GAAA,MAAA,EAAA;cACA;YACA;UACA;;UACA,OAAA,CAAA;QACA;QACA;;MAxMA;QAAA;QAAA,OAyMA,qBAAA,SAAA,EAAA,OAAA,EAAA;UACA,IAAA,UAAA,GAAA,KAAA,kBAAA;UACA,IAAA,QAAA,GAAA,KAAA,EAAA,CAAA,QAAA;;UACA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAuB,CAAA,GAAA,QAAA,CAAA,MAAvB,EAA4C,CAAA,EAA5C,EAA4C;YAC5C,IAAA,KAAA,GAAA,QAAA,CAAA,CAAA,CAAA,CAAA,KAAA;YACA,IAAA,KAAA,GAAA,EAAA;;YACA,IAAA,CAAA,GAAA,SAAA,IAAA,CAAA,IAAA,OAAA,EAAA;cACA,KAAA,wBAAsC,CAAA,UAAtC,QAAA;YACA,CAFA,MAGA,IAAA,CAAA,GAAA,SAAA,IAAA,CAAA,IAAA,OAAA,EAAA;cACA,KAAA,wBAAsC,UAAtC,QAAA;YACA;;YACA,KAAA,CAAA,WAAA,CAAA,GAAA,KAAA;UACA;QACA;MAvNA;QAAA;QAAA,OAwNA,oBAAA,IAAA,EAAA;UACA,IAAA,CAAA,KAAA,QAAA,EAAA;YACA,OAAA,CAAA;UACA;;UACA,IAAA,MAAA,GAAA,CAAA;;UACA,IAAA,IAAA,GAAA,KAAA,WAAA,EAAA;YACA,MAAA,GAAA,CAAA,WAAA;UACA,CAFA,MAGA,IAAA,IAAA,GAAA,KAAA,cAAA,EAAA;YACA,MAAA,GAAA,WAAA;UACA;;UACA,IAAA,MAAA,KAAA,CAAA,EAAA;YACA,KAAA,QAAA,CAAA,QAAA,CAAA,CAAA,EAAA,MAAA;UACA;;UACA,OAAA,KAAA,QAAA,CAAA,SAAA,GAAA,KAAA,eAAA;QACA;MAvOA;QAAA;QAAA,OAwOA,kBAAA;UAAA;;UACA,IAAA,IAAA,GAAqB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAArB;UACA,OAAgB,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAE,8CAAA,CAAA,GAAA,CAAF,EAAM;YAAG,+CACzB,IADyB,EACzB,IADyB,2BAEzB,iBAFyB,EAEzB,CAAA,KAAA,QAFyB,2BAGzB,qBAHyB,EAGzB,KAAA,KAAA,KAAA,CAHyB;UAAH,CAAN,CAAhB;QAKA;MA/OA;QAAA;QAAA,KAgPA,eAAA;UAAc,OAAQ,MAAA,CAAA,8CAAA,CAAA,GAAA,CAAA,CAAA,CAAU,IAAV,CAAR;QAAyB;MAhPvC;QAAA;QAAA,KAiPA,eAAA;UAA2B,OAAA;YAC3B,YAAA,CAAA,iBAAA;UAD2B,CAAA;QAErB;MAnPN;QAAA;QAAA,KAoPA,eAAA;UAAwB,OAAA,6yBAAA;QAAszB;MApP90B;;MAAA;IAAA,GAAA;;IAsPA,IAAA,YAAA,GAAA,SAAA,YAAA,CAAA,OAAA,EAAA;MACA,OAAA,OAAA,CAAA,WAAA,CAAA;IACA,CAFA;;IAGA,IAAA,eAAA,GAAA,SAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA;MACA,IAAA,MAAA;;MACA,OAAA,IAAA,EAAA;QACA,MAAA,GAAA,IAAA,CAAA,aAAA;;QACA,IAAA,MAAA,KAAA,SAAA,EAAA;UACA,OAAA,IAAA;QACA;;QACA,IAAA,GAAA,MAAA;MACA;;MACA,OAAA,SAAA;IACA,CAVA;;IAWA,IAAA,kBAAA,GAAA,EAAA;IACA,IAAA,WAAA,GAAA,EAAA;IACA,IAAA,qBAAA,GAAA,kBAAA;;IACA,IAAA,YAAA,GAAA,SAAA,YAAA,CAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA;MACA,IAAA,OAAA,GAAA,KAAA,CAAA,IAAA,CAAA;MACA,KAAA,CAAA,MAAA,CAAA,IAAA,EAAA,CAAA;MACA,KAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,EAAA,OAAA;MACA,OAAA,KAAA,CAAA,KAAA,EAAA;IACA,CALA","sourcesContent":["import { r as registerInstance, h, c as getIonMode, H as Host, d as createEvent, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, c as hapticSelectionEnd } from './haptic-c8f1473e.js';\n\nconst Reorder = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    onClick(ev) {\n        ev.preventDefault();\n        ev.stopImmediatePropagation();\n    }\n    render() {\n        return (h(Host, { class: getIonMode(this) }, h(\"slot\", null, h(\"ion-icon\", { name: \"reorder\", lazy: false, class: \"reorder-icon\" }))));\n    }\n    static get style() { return \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block;font-size:22px;font-size:31px;opacity:.3}\"; }\n};\n\nconst ReorderGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastToIndex = -1;\n        this.cachedHeights = [];\n        this.scrollElTop = 0;\n        this.scrollElBottom = 0;\n        this.scrollElInitial = 0;\n        this.containerTop = 0;\n        this.containerBottom = 0;\n        this.state = 0 /* Idle */;\n        /**\n         * If `true`, the reorder will be hidden.\n         */\n        this.disabled = true;\n        this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.setDisabled(this.disabled);\n        }\n    }\n    async connectedCallback() {\n        const contentEl = this.el.closest('ion-content');\n        if (contentEl) {\n            this.scrollEl = await contentEl.getScrollElement();\n        }\n        this.gesture = (await import('./index-624eea58.js')).createGesture({\n            el: this.el,\n            gestureName: 'reorder',\n            gesturePriority: 110,\n            threshold: 0,\n            direction: 'y',\n            passive: false,\n            canStart: detail => this.canStart(detail),\n            onStart: ev => this.onStart(ev),\n            onMove: ev => this.onMove(ev),\n            onEnd: () => this.onEnd(),\n        });\n        this.disabledChanged();\n    }\n    disconnectedCallback() {\n        this.onEnd();\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /**\n     * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n     *\n     * If a list of items is passed, the list will be reordered and returned in the\n     * proper order.\n     *\n     * If no parameters are passed or if `true` is passed in, the reorder will complete\n     * and the item will remain in the position it was dragged to. If `false` is passed,\n     * the reorder will complete and the item will bounce back to its original position.\n     *\n     * @param listOrReorder A list of items to be sorted and returned in the new order or a\n     * boolean of whether or not the reorder should reposition the item.\n     */\n    complete(listOrReorder) {\n        return Promise.resolve(this.completeSync(listOrReorder));\n    }\n    canStart(ev) {\n        if (this.selectedItemEl || this.state !== 0 /* Idle */) {\n            return false;\n        }\n        const target = ev.event.target;\n        const reorderEl = target.closest('ion-reorder');\n        if (!reorderEl) {\n            return false;\n        }\n        const item = findReorderItem(reorderEl, this.el);\n        if (!item) {\n            return false;\n        }\n        ev.data = item;\n        return true;\n    }\n    onStart(ev) {\n        ev.event.preventDefault();\n        const item = this.selectedItemEl = ev.data;\n        const heights = this.cachedHeights;\n        heights.length = 0;\n        const el = this.el;\n        const children = el.children;\n        if (!children || children.length === 0) {\n            return;\n        }\n        let sum = 0;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            sum += child.offsetHeight;\n            heights.push(sum);\n            child.$ionIndex = i;\n        }\n        const box = el.getBoundingClientRect();\n        this.containerTop = box.top;\n        this.containerBottom = box.bottom;\n        if (this.scrollEl) {\n            const scrollBox = this.scrollEl.getBoundingClientRect();\n            this.scrollElInitial = this.scrollEl.scrollTop;\n            this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n            this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n        }\n        else {\n            this.scrollElInitial = 0;\n            this.scrollElTop = 0;\n            this.scrollElBottom = 0;\n        }\n        this.lastToIndex = indexForItem(item);\n        this.selectedItemHeight = item.offsetHeight;\n        this.state = 1 /* Active */;\n        item.classList.add(ITEM_REORDER_SELECTED);\n        hapticSelectionStart();\n    }\n    onMove(ev) {\n        const selectedItem = this.selectedItemEl;\n        if (!selectedItem) {\n            return;\n        }\n        // Scroll if we reach the scroll margins\n        const scroll = this.autoscroll(ev.currentY);\n        // // Get coordinate\n        const top = this.containerTop - scroll;\n        const bottom = this.containerBottom - scroll;\n        const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n        const deltaY = scroll + currentY - ev.startY;\n        const normalizedY = currentY - top;\n        const toIndex = this.itemIndexForTop(normalizedY);\n        if (toIndex !== this.lastToIndex) {\n            const fromIndex = indexForItem(selectedItem);\n            this.lastToIndex = toIndex;\n            hapticSelectionChanged();\n            this.reorderMove(fromIndex, toIndex);\n        }\n        // Update selected item position\n        selectedItem.style.transform = `translateY(${deltaY}px)`;\n    }\n    onEnd() {\n        const selectedItemEl = this.selectedItemEl;\n        this.state = 2 /* Complete */;\n        if (!selectedItemEl) {\n            this.state = 0 /* Idle */;\n            return;\n        }\n        const toIndex = this.lastToIndex;\n        const fromIndex = indexForItem(selectedItemEl);\n        if (toIndex === fromIndex) {\n            this.completeSync();\n        }\n        else {\n            this.ionItemReorder.emit({\n                from: fromIndex,\n                to: toIndex,\n                complete: this.completeSync.bind(this)\n            });\n        }\n        hapticSelectionEnd();\n    }\n    completeSync(listOrReorder) {\n        const selectedItemEl = this.selectedItemEl;\n        if (selectedItemEl && this.state === 2 /* Complete */) {\n            const children = this.el.children;\n            const len = children.length;\n            const toIndex = this.lastToIndex;\n            const fromIndex = indexForItem(selectedItemEl);\n            if (toIndex !== fromIndex && (!listOrReorder || listOrReorder === true)) {\n                const ref = (fromIndex < toIndex)\n                    ? children[toIndex + 1]\n                    : children[toIndex];\n                this.el.insertBefore(selectedItemEl, ref);\n            }\n            if (Array.isArray(listOrReorder)) {\n                listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n            }\n            for (let i = 0; i < len; i++) {\n                children[i].style['transform'] = '';\n            }\n            selectedItemEl.style.transition = '';\n            selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n            this.selectedItemEl = undefined;\n            this.state = 0 /* Idle */;\n        }\n        return listOrReorder;\n    }\n    itemIndexForTop(deltaY) {\n        const heights = this.cachedHeights;\n        let i = 0;\n        // TODO: since heights is a sorted array of integers, we can do\n        // speed up the search using binary search. Remember that linear-search is still\n        // faster than binary-search for small arrays (<64) due CPU branch misprediction.\n        for (i = 0; i < heights.length; i++) {\n            if (heights[i] > deltaY) {\n                break;\n            }\n        }\n        return i;\n    }\n    /********* DOM WRITE ********* */\n    reorderMove(fromIndex, toIndex) {\n        const itemHeight = this.selectedItemHeight;\n        const children = this.el.children;\n        for (let i = 0; i < children.length; i++) {\n            const style = children[i].style;\n            let value = '';\n            if (i > fromIndex && i <= toIndex) {\n                value = `translateY(${-itemHeight}px)`;\n            }\n            else if (i < fromIndex && i >= toIndex) {\n                value = `translateY(${itemHeight}px)`;\n            }\n            style['transform'] = value;\n        }\n    }\n    autoscroll(posY) {\n        if (!this.scrollEl) {\n            return 0;\n        }\n        let amount = 0;\n        if (posY < this.scrollElTop) {\n            amount = -SCROLL_JUMP;\n        }\n        else if (posY > this.scrollElBottom) {\n            amount = SCROLL_JUMP;\n        }\n        if (amount !== 0) {\n            this.scrollEl.scrollBy(0, amount);\n        }\n        return this.scrollEl.scrollTop - this.scrollElInitial;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                'reorder-enabled': !this.disabled,\n                'reorder-list-active': this.state !== 0 /* Idle */,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n    static get style() { return \".reorder-list-active>*{-webkit-transition:-webkit-transform .3s;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none!important;transition:none!important;-webkit-box-shadow:0 0 10px rgba(0,0,0,.4);box-shadow:0 0 10px rgba(0,0,0,.4);opacity:.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translateZ(0);transform:translateZ(0)}\"; }\n};\nconst indexForItem = (element) => {\n    return element['$ionIndex'];\n};\nconst findReorderItem = (node, container) => {\n    let parent;\n    while (node) {\n        parent = node.parentElement;\n        if (parent === container) {\n            return node;\n        }\n        node = parent;\n    }\n    return undefined;\n};\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\nconst reorderArray = (array, from, to) => {\n    const element = array[from];\n    array.splice(from, 1);\n    array.splice(to, 0, element);\n    return array.slice();\n};\n\nexport { Reorder as ion_reorder, ReorderGroup as ion_reorder_group };\n"],"sourceRoot":"webpack:///","file":"53-es5.js"}