{"version":3,"sources":["node_modules/@ionic/core/dist/esm/css-shim-206ea950-3169f23e.js"],"names":[],"mappings":"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","sourcesContent":["/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n/** @unrestricted */\nvar StyleNode = /** @class */ (function () {\n    function StyleNode() {\n        this.start = 0;\n        this.end = 0;\n        this.previous = null;\n        this.parent = null;\n        this.rules = null;\n        this.parsedCssText = '';\n        this.cssText = '';\n        this.atRule = false;\n        this.type = 0;\n        this.keyframesName = '';\n        this.selector = '';\n        this.parsedSelector = '';\n    }\n    return StyleNode;\n}());\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parse(text) {\n    text = clean(text);\n    return parseCss(lex(text), text);\n}\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n    return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n    var root = new StyleNode();\n    root['start'] = 0;\n    root['end'] = text.length;\n    var n = root;\n    for (var i = 0, l = text.length; i < l; i++) {\n        if (text[i] === OPEN_BRACE) {\n            if (!n['rules']) {\n                n['rules'] = [];\n            }\n            var p = n;\n            var previous = p['rules'][p['rules'].length - 1] || null;\n            n = new StyleNode();\n            n['start'] = i + 1;\n            n['parent'] = p;\n            n['previous'] = previous;\n            p['rules'].push(n);\n        }\n        else if (text[i] === CLOSE_BRACE) {\n            n['end'] = i + 1;\n            n = n['parent'] || root;\n        }\n    }\n    return root;\n}\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n    var t = text.substring(node['start'], node['end'] - 1);\n    node['parsedCssText'] = node['cssText'] = t.trim();\n    if (node.parent) {\n        var ss = node.previous ? node.previous['end'] : node.parent['start'];\n        t = text.substring(ss, node['start'] - 1);\n        t = _expandUnicodeEscapes(t);\n        t = t.replace(RX.multipleSpaces, ' ');\n        // TODO(sorvell): ad hoc; make selector include only after last ;\n        // helps with mixin syntax\n        t = t.substring(t.lastIndexOf(';') + 1);\n        var s = node['parsedSelector'] = node['selector'] = t.trim();\n        node['atRule'] = (s.indexOf(AT_START) === 0);\n        // note, support a subset of rule types...\n        if (node['atRule']) {\n            if (s.indexOf(MEDIA_START) === 0) {\n                node['type'] = types.MEDIA_RULE;\n            }\n            else if (s.match(RX.keyframesRule)) {\n                node['type'] = types.KEYFRAMES_RULE;\n                node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();\n            }\n        }\n        else {\n            if (s.indexOf(VAR_START) === 0) {\n                node['type'] = types.MIXIN_RULE;\n            }\n            else {\n                node['type'] = types.STYLE_RULE;\n            }\n        }\n    }\n    var r$ = node['rules'];\n    if (r$) {\n        for (var i = 0, l = r$.length, r = void 0; (i < l) && (r = r$[i]); i++) {\n            parseCss(r, text);\n        }\n    }\n    return node;\n}\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n    return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function () {\n        var code = arguments[1], repeat = 6 - code.length;\n        while (repeat--) {\n            code = '0' + code;\n        }\n        return '\\\\' + code;\n    });\n}\n/** @enum {number} */\nvar types = {\n    STYLE_RULE: 1,\n    KEYFRAMES_RULE: 7,\n    MEDIA_RULE: 4,\n    MIXIN_RULE: 1000\n};\nvar OPEN_BRACE = '{';\nvar CLOSE_BRACE = '}';\n// helper regexp's\nvar RX = {\n    comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n    port: /@import[^;]*;/gim,\n    customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n    mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n    mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n    varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n    keyframesRule: /^@[^\\s]*keyframes/,\n    multipleSpaces: /\\s+/g\n};\nvar VAR_START = '--';\nvar MEDIA_START = '@media';\nvar AT_START = '@';\nfunction findRegex(regex, cssText, offset) {\n    regex['lastIndex'] = 0;\n    var r = cssText.substring(offset).match(regex);\n    if (r) {\n        var start = offset + r['index'];\n        return {\n            start: start,\n            end: start + r[0].length\n        };\n    }\n    return null;\n}\nvar VAR_USAGE_START = /\\bvar\\(/;\nvar VAR_ASSIGN_START = /\\B--[\\w-]+\\s*:/;\nvar COMMENTS = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim;\nvar TRAILING_LINES = /^[\\t ]+\\n/gm;\nfunction resolveVar(props, prop, fallback) {\n    if (props[prop]) {\n        return props[prop];\n    }\n    if (fallback) {\n        return executeTemplate(fallback, props);\n    }\n    return '';\n}\nfunction findVarEndIndex(cssText, offset) {\n    var count = 0;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (c === '(') {\n            count++;\n        }\n        else if (c === ')') {\n            count--;\n            if (count <= 0) {\n                return i + 1;\n            }\n        }\n    }\n    return i;\n}\nfunction parseVar(cssText, offset) {\n    var varPos = findRegex(VAR_USAGE_START, cssText, offset);\n    if (!varPos) {\n        return null;\n    }\n    var endVar = findVarEndIndex(cssText, varPos.start);\n    var varContent = cssText.substring(varPos.end, endVar - 1);\n    var _a = varContent.split(','), propName = _a[0], fallback = _a.slice(1);\n    return {\n        start: varPos.start,\n        end: endVar,\n        propName: propName.trim(),\n        fallback: fallback.length > 0 ? fallback.join(',').trim() : undefined\n    };\n}\nfunction compileVar(cssText, template, offset) {\n    var varMeta = parseVar(cssText, offset);\n    if (!varMeta) {\n        template.push(cssText.substring(offset, cssText.length));\n        return cssText.length;\n    }\n    var propName = varMeta.propName;\n    var fallback = varMeta.fallback != null ? compileTemplate(varMeta.fallback) : undefined;\n    template.push(cssText.substring(offset, varMeta.start), function (params) { return resolveVar(params, propName, fallback); });\n    return varMeta.end;\n}\nfunction executeTemplate(template, props) {\n    var final = '';\n    for (var i = 0; i < template.length; i++) {\n        var s = template[i];\n        final += (typeof s === 'string')\n            ? s\n            : s(props);\n    }\n    return final;\n}\nfunction findEndValue(cssText, offset) {\n    var onStr = false;\n    var double = false;\n    var i = offset;\n    for (; i < cssText.length; i++) {\n        var c = cssText[i];\n        if (onStr) {\n            if (double && c === '\"') {\n                onStr = false;\n            }\n            if (!double && c === '\\'') {\n                onStr = false;\n            }\n        }\n        else {\n            if (c === '\"') {\n                onStr = true;\n                double = true;\n            }\n            else if (c === '\\'') {\n                onStr = true;\n                double = false;\n            }\n            else if (c === ';') {\n                return i + 1;\n            }\n            else if (c === '}') {\n                return i;\n            }\n        }\n    }\n    return i;\n}\nfunction removeCustomAssigns(cssText) {\n    var final = '';\n    var offset = 0;\n    while (true) {\n        var assignPos = findRegex(VAR_ASSIGN_START, cssText, offset);\n        var start = assignPos ? assignPos.start : cssText.length;\n        final += cssText.substring(offset, start);\n        if (assignPos) {\n            offset = findEndValue(cssText, start);\n        }\n        else {\n            break;\n        }\n    }\n    return final;\n}\nfunction compileTemplate(cssText) {\n    var index = 0;\n    cssText = cssText.replace(COMMENTS, '');\n    cssText = removeCustomAssigns(cssText)\n        .replace(TRAILING_LINES, '');\n    var segments = [];\n    while (index < cssText.length) {\n        index = compileVar(cssText, segments, index);\n    }\n    return segments;\n}\nfunction resolveValues(selectors) {\n    var props = {};\n    selectors.forEach(function (selector) {\n        selector.declarations.forEach(function (dec) {\n            props[dec.prop] = dec.value;\n        });\n    });\n    var propsValues = {};\n    var entries = Object.entries(props);\n    var _loop_1 = function (i) {\n        var dirty = false;\n        entries.forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            var propValue = executeTemplate(value, propsValues);\n            if (propValue !== propsValues[key]) {\n                propsValues[key] = propValue;\n                dirty = true;\n            }\n        });\n        if (!dirty) {\n            return \"break\";\n        }\n    };\n    for (var i = 0; i < 10; i++) {\n        var state_1 = _loop_1();\n        if (state_1 === \"break\")\n            break;\n    }\n    return propsValues;\n}\nfunction getSelectors(root, index) {\n    if (index === void 0) { index = 0; }\n    if (!root.rules) {\n        return [];\n    }\n    var selectors = [];\n    root.rules\n        .filter(function (rule) { return rule.type === types.STYLE_RULE; })\n        .forEach(function (rule) {\n        var declarations = getDeclarations(rule.cssText);\n        if (declarations.length > 0) {\n            rule.parsedSelector.split(',').forEach(function (selector) {\n                selector = selector.trim();\n                selectors.push({\n                    selector: selector,\n                    declarations: declarations,\n                    specificity: computeSpecificity(),\n                    nu: index\n                });\n            });\n        }\n        index++;\n    });\n    return selectors;\n}\nfunction computeSpecificity(_selector) {\n    return 1;\n}\nvar IMPORTANT = '!important';\nvar FIND_DECLARATIONS = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gm;\nfunction getDeclarations(cssText) {\n    var declarations = [];\n    var xArray;\n    while (xArray = FIND_DECLARATIONS.exec(cssText.trim())) {\n        var _a = normalizeValue(xArray[2]), value = _a.value, important = _a.important;\n        declarations.push({\n            prop: xArray[1].trim(),\n            value: compileTemplate(value),\n            important: important,\n        });\n    }\n    return declarations;\n}\nfunction normalizeValue(value) {\n    var regex = /\\s+/gim;\n    value = value.replace(regex, ' ').trim();\n    var important = value.endsWith(IMPORTANT);\n    if (important) {\n        value = value.substr(0, value.length - IMPORTANT.length).trim();\n    }\n    return {\n        value: value,\n        important: important\n    };\n}\nfunction getActiveSelectors(hostEl, hostScopeMap, globalScopes) {\n    // computes the css scopes that might affect this particular element\n    // avoiding using spread arrays to avoid ts helper fns when in es5\n    var scopes = [];\n    var scopesForElement = getScopesForElement(hostScopeMap, hostEl);\n    // globalScopes are always took into account\n    globalScopes.forEach(function (s) { return scopes.push(s); });\n    // the parent scopes are computed by walking parent dom until <html> is reached\n    scopesForElement.forEach(function (s) { return scopes.push(s); });\n    // each scope might have an array of associated selectors\n    // let's flatten the complete array of selectors from all the scopes\n    var selectorSet = getSelectorsForScopes(scopes);\n    // we filter to only the selectors that matches the hostEl\n    var activeSelectors = selectorSet.filter(function (selector) { return matches(hostEl, selector.selector); });\n    // sort selectors by specifity\n    return sortSelectors(activeSelectors);\n}\nfunction getScopesForElement(hostTemplateMap, node) {\n    var scopes = [];\n    while (node) {\n        var scope = hostTemplateMap.get(node);\n        if (scope) {\n            scopes.push(scope);\n        }\n        node = node.parentElement;\n    }\n    return scopes;\n}\nfunction getSelectorsForScopes(scopes) {\n    var selectors = [];\n    scopes.forEach(function (scope) {\n        selectors.push.apply(selectors, scope.selectors);\n    });\n    return selectors;\n}\nfunction sortSelectors(selectors) {\n    selectors.sort(function (a, b) {\n        if (a.specificity === b.specificity) {\n            return a.nu - b.nu;\n        }\n        return a.specificity - b.specificity;\n    });\n    return selectors;\n}\nfunction matches(el, selector) {\n    return selector === ':root' || selector === 'html' || el.matches(selector);\n}\nfunction parseCSS(original) {\n    var ast = parse(original);\n    var template = compileTemplate(original);\n    var selectors = getSelectors(ast);\n    return {\n        original: original,\n        template: template,\n        selectors: selectors,\n        usesCssVars: template.length > 1\n    };\n}\nfunction addGlobalStyle(globalScopes, styleEl) {\n    if (globalScopes.some(function (css) { return css.styleEl === styleEl; })) {\n        return false;\n    }\n    var css = parseCSS(styleEl.textContent);\n    css.styleEl = styleEl;\n    globalScopes.push(css);\n    return true;\n}\nfunction updateGlobalScopes(scopes) {\n    var selectors = getSelectorsForScopes(scopes);\n    var props = resolveValues(selectors);\n    scopes.forEach(function (scope) {\n        if (scope.usesCssVars) {\n            scope.styleEl.textContent = executeTemplate(scope.template, props);\n        }\n    });\n}\nfunction reScope(scope, scopeId) {\n    var template = scope.template.map(function (segment) {\n        return (typeof segment === 'string')\n            ? replaceScope(segment, scope.scopeId, scopeId)\n            : segment;\n    });\n    var selectors = scope.selectors.map(function (sel) {\n        return Object.assign(Object.assign({}, sel), { selector: replaceScope(sel.selector, scope.scopeId, scopeId) });\n    });\n    return Object.assign(Object.assign({}, scope), { template: template,\n        selectors: selectors,\n        scopeId: scopeId });\n}\nfunction replaceScope(original, oldScopeId, newScopeId) {\n    original = replaceAll(original, \"\\\\.\" + oldScopeId, \".\" + newScopeId);\n    return original;\n}\nfunction replaceAll(input, find, replace) {\n    return input.replace(new RegExp(find, 'g'), replace);\n}\nfunction loadDocument(doc, globalScopes) {\n    loadDocumentStyles(doc, globalScopes);\n    return loadDocumentLinks(doc, globalScopes);\n}\nfunction startWatcher(doc, globalScopes) {\n    var mutation = new MutationObserver(function () {\n        if (loadDocumentStyles(doc, globalScopes)) {\n            updateGlobalScopes(globalScopes);\n        }\n    });\n    mutation.observe(document.head, { childList: true });\n}\nfunction loadDocumentLinks(doc, globalScopes) {\n    var promises = [];\n    var linkElms = doc.querySelectorAll('link[rel=\"stylesheet\"][href]:not([data-no-shim])');\n    for (var i = 0; i < linkElms.length; i++) {\n        promises.push(addGlobalLink(doc, globalScopes, linkElms[i]));\n    }\n    return Promise.all(promises);\n}\nfunction loadDocumentStyles(doc, globalScopes) {\n    var styleElms = Array.from(doc.querySelectorAll('style:not([data-styles]):not([data-no-shim])'));\n    return styleElms\n        .map(function (style) { return addGlobalStyle(globalScopes, style); })\n        .some(Boolean);\n}\nfunction addGlobalLink(doc, globalScopes, linkElm) {\n    var url = linkElm.href;\n    return fetch(url).then(function (rsp) { return rsp.text(); }).then(function (text) {\n        if (hasCssVariables(text) && linkElm.parentNode) {\n            if (hasRelativeUrls(text)) {\n                text = fixRelativeUrls(text, url);\n            }\n            var styleEl = doc.createElement('style');\n            styleEl.setAttribute('data-styles', '');\n            styleEl.textContent = text;\n            addGlobalStyle(globalScopes, styleEl);\n            linkElm.parentNode.insertBefore(styleEl, linkElm);\n            linkElm.remove();\n        }\n    }).catch(function (err) {\n        console.error(err);\n    });\n}\n// This regexp tries to determine when a variable is declared, for example:\n//\n// .my-el { --highlight-color: green; }\n//\n// but we don't want to trigger when a classname uses \"--\" or a pseudo-class is\n// used. We assume that the only characters that can preceed a variable\n// declaration are \"{\", from an opening block, \";\" from a preceeding rule, or a\n// space. This prevents the regexp from matching a word in a selector, since\n// they would need to start with a \".\" or \"#\". (We assume element names don't\n// start with \"--\").\nvar CSS_VARIABLE_REGEXP = /[\\s;{]--[-a-zA-Z0-9]+\\s*:/m;\nfunction hasCssVariables(css) {\n    return css.indexOf('var(') > -1 || CSS_VARIABLE_REGEXP.test(css);\n}\n// This regexp find all url() usages with relative urls\nvar CSS_URL_REGEXP = /url[\\s]*\\([\\s]*['\"]?(?!(?:https?|data)\\:|\\/)([^\\'\\\"\\)]*)[\\s]*['\"]?\\)[\\s]*/gim;\nfunction hasRelativeUrls(css) {\n    CSS_URL_REGEXP.lastIndex = 0;\n    return CSS_URL_REGEXP.test(css);\n}\nfunction fixRelativeUrls(css, originalUrl) {\n    // get the basepath from the original import url\n    var basePath = originalUrl.replace(/[^/]*$/, '');\n    // replace the relative url, with the new relative url\n    return css.replace(CSS_URL_REGEXP, function (fullMatch, url) {\n        // rhe new relative path is the base path + uri\n        // TODO: normalize relative URL\n        var relativeUrl = basePath + url;\n        return fullMatch.replace(url, relativeUrl);\n    });\n}\nvar CustomStyle = /** @class */ (function () {\n    function CustomStyle(win, doc) {\n        this.win = win;\n        this.doc = doc;\n        this.count = 0;\n        this.hostStyleMap = new WeakMap();\n        this.hostScopeMap = new WeakMap();\n        this.globalScopes = [];\n        this.scopesMap = new Map();\n        this.didInit = false;\n    }\n    CustomStyle.prototype.initShim = function () {\n        var _this = this;\n        if (this.didInit) {\n            return Promise.resolve();\n        }\n        else {\n            this.didInit = true;\n            return new Promise(function (resolve) {\n                _this.win.requestAnimationFrame(function () {\n                    startWatcher(_this.doc, _this.globalScopes);\n                    loadDocument(_this.doc, _this.globalScopes).then(function () { return resolve(); });\n                });\n            });\n        }\n    };\n    CustomStyle.prototype.addLink = function (linkEl) {\n        var _this = this;\n        return addGlobalLink(this.doc, this.globalScopes, linkEl).then(function () {\n            _this.updateGlobal();\n        });\n    };\n    CustomStyle.prototype.addGlobalStyle = function (styleEl) {\n        if (addGlobalStyle(this.globalScopes, styleEl)) {\n            this.updateGlobal();\n        }\n    };\n    CustomStyle.prototype.createHostStyle = function (hostEl, cssScopeId, cssText, isScoped) {\n        if (this.hostScopeMap.has(hostEl)) {\n            throw new Error('host style already created');\n        }\n        var baseScope = this.registerHostTemplate(cssText, cssScopeId, isScoped);\n        var styleEl = this.doc.createElement('style');\n        styleEl.setAttribute('data-styles', '');\n        if (!baseScope.usesCssVars) {\n            // This component does not use (read) css variables\n            styleEl.textContent = cssText;\n        }\n        else if (isScoped) {\n            // This component is dynamic: uses css var and is scoped\n            styleEl['s-sc'] = cssScopeId = baseScope.scopeId + \"-\" + this.count;\n            styleEl.textContent = '/*needs update*/';\n            this.hostStyleMap.set(hostEl, styleEl);\n            this.hostScopeMap.set(hostEl, reScope(baseScope, cssScopeId));\n            this.count++;\n        }\n        else {\n            // This component uses css vars, but it's no-encapsulation (global static)\n            baseScope.styleEl = styleEl;\n            if (!baseScope.usesCssVars) {\n                styleEl.textContent = executeTemplate(baseScope.template, {});\n            }\n            this.globalScopes.push(baseScope);\n            this.updateGlobal();\n            this.hostScopeMap.set(hostEl, baseScope);\n        }\n        return styleEl;\n    };\n    CustomStyle.prototype.removeHost = function (hostEl) {\n        var css = this.hostStyleMap.get(hostEl);\n        if (css) {\n            css.remove();\n        }\n        this.hostStyleMap.delete(hostEl);\n        this.hostScopeMap.delete(hostEl);\n    };\n    CustomStyle.prototype.updateHost = function (hostEl) {\n        var scope = this.hostScopeMap.get(hostEl);\n        if (scope && scope.usesCssVars && scope.isScoped) {\n            var styleEl = this.hostStyleMap.get(hostEl);\n            if (styleEl) {\n                var selectors = getActiveSelectors(hostEl, this.hostScopeMap, this.globalScopes);\n                var props = resolveValues(selectors);\n                styleEl.textContent = executeTemplate(scope.template, props);\n            }\n        }\n    };\n    CustomStyle.prototype.updateGlobal = function () {\n        updateGlobalScopes(this.globalScopes);\n    };\n    CustomStyle.prototype.registerHostTemplate = function (cssText, scopeId, isScoped) {\n        var scope = this.scopesMap.get(scopeId);\n        if (!scope) {\n            scope = parseCSS(cssText);\n            scope.scopeId = scopeId;\n            scope.isScoped = isScoped;\n            this.scopesMap.set(scopeId, scope);\n        }\n        return scope;\n    };\n    return CustomStyle;\n}());\nvar win = window;\nfunction needsShim() {\n    return !(win.CSS && win.CSS.supports && win.CSS.supports('color', 'var(--c)'));\n}\nif (!win.__stencil_cssshim && needsShim()) {\n    win.__stencil_cssshim = new CustomStyle(win, document);\n}\n"],"sourceRoot":"webpack:///","file":"css-shim-206ea950-3169f23e-js-es5.js"}