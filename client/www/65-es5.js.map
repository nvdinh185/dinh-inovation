{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-split-pane-ios.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, e as getElement, H as Host } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nconst SplitPane = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the split pane will be hidden.\n         */\n        this.disabled = false;\n        /**\n         * When the split-pane should be shown.\n         * Can be a CSS media query expression, or a shortcut expression.\n         * Can also be a boolean expression.\n         */\n        this.when = QUERY['lg'];\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    }\n    visibleChanged(visible) {\n        const detail = { visible, isPane: this.isPane.bind(this) };\n        this.ionSplitPaneVisible.emit(detail);\n    }\n    connectedCallback() {\n        this.styleChildren();\n        this.updateState();\n    }\n    disconnectedCallback() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    }\n    componentWillLoad() {\n        if (this.contentId === undefined) {\n            console.warn(`[DEPRECATED][ion-split-pane] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-split-pane>\n    ...\n    <div main>...</div>\n  </ion-split-pane>\n\nAFTER:\n  <ion-split-pane contentId=\"main-content\">\n    ...\n    <div id=\"main-content\">...</div>\n  </ion-split-pane>\n`);\n        }\n    }\n    updateState() {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        // Check if the split-pane is disabled\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        // When query is a boolean\n        const query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        // When query is a string, let's find first if it is a shortcut\n        const mediaQuery = QUERY[query] || query;\n        // Media query is empty or null, we hide it\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        if (window.matchMedia) {\n            // Listen on media query\n            const callback = (q) => {\n                this.visible = q.matches;\n            };\n            const mediaList = window.matchMedia(mediaQuery);\n            mediaList.addListener(callback);\n            this.rmL = () => mediaList.removeListener(callback);\n            this.visible = mediaList.matches;\n        }\n    }\n    isPane(element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    }\n    styleChildren() {\n        const contentId = this.contentId;\n        const children = this.el.children;\n        const nu = this.el.childElementCount;\n        let foundMain = false;\n        for (let i = 0; i < nu; i++) {\n            const child = children[i];\n            const isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane cannot have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane does not have a specified main node');\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                // Used internally for styling\n                [`split-pane-${mode}`]: true,\n                'split-pane-visible': this.visible\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n    }; }\n    static get style() { return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-ios{--border:0.55px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-250,#c8c7cc)))}.split-pane-ios.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-ios.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"; }\n};\nconst setPaneClass = (el, isMain) => {\n    let toAdd;\n    let toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    const classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n};\n\nexport { SplitPane as ion_split_pane };\n"],"sourceRoot":"webpack:///","file":"65-es5.js"}