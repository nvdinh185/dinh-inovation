{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-action-sheet-controller_8.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, c as getIonMode, h, H as Host } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { h as createOverlay, j as dismissOverlay, k as getOverlay } from './overlays-10640d86.js';\nimport { o as openURL, c as createColorClasses } from './theme-18cbe2cc.js';\n\nconst ActionSheetController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create an action sheet overlay with action sheet options.\n     *\n     * @param options The options to use to create the action sheet.\n     */\n    create(options) {\n        return createOverlay('ion-action-sheet', options);\n    }\n    /**\n     * Dismiss the open action sheet overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the action sheet.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the action sheet.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the action sheet to dismiss. If an id is not provided, it will dismiss the most recently opened action sheet.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-action-sheet', id);\n    }\n    /**\n     * Get the most recently opened action sheet overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-action-sheet');\n    }\n};\n\nconst AlertController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create an alert overlay with alert options.\n     *\n     * @param options The options to use to create the alert.\n     */\n    create(options) {\n        return createOverlay('ion-alert', options);\n    }\n    /**\n     * Dismiss the open alert overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the alert.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the alert.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the alert to dismiss. If an id is not provided, it will dismiss the most recently opened alert.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-alert', id);\n    }\n    /**\n     * Get the most recently opened alert overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-alert');\n    }\n};\n\nconst Anchor = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = (ev) => {\n            openURL(this.href, ev, this.routerDirection);\n        };\n    }\n    componentDidLoad() {\n        console.warn('[DEPRECATED][ion-anchor] The <ion-anchor> component has been deprecated. Please use an <ion-router-link> if you are using a vanilla JS or Stencil project or an <a> with the Angular router.');\n    }\n    render() {\n        const mode = getIonMode(this);\n        const attrs = {\n            href: this.href,\n            rel: this.rel\n        };\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'ion-activatable': true }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    }\n    static get style() { return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"; }\n};\n\nconst LoadingController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a loading overlay with loading options.\n     *\n     * @param options The options to use to create the loading.\n     */\n    create(options) {\n        return createOverlay('ion-loading', options);\n    }\n    /**\n     * Dismiss the open loading overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the loading.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the loading.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the loading to dismiss. If an id is not provided, it will dismiss the most recently opened loading.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-loading', id);\n    }\n    /**\n     * Get the most recently opened loading overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-loading');\n    }\n};\n\nconst ModalController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a modal overlay with modal options.\n     *\n     * @param options The options to use to create the modal.\n     */\n    create(options) {\n        return createOverlay('ion-modal', options);\n    }\n    /**\n     * Dismiss the open modal overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the modal.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the modal.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the modal to dismiss. If an id is not provided, it will dismiss the most recently opened modal.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-modal', id);\n    }\n    /**\n     * Get the most recently opened modal overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-modal');\n    }\n};\n\nconst PickerController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a picker overlay with picker options.\n     *\n     * @param options The options to use to create the picker.\n     */\n    create(options) {\n        return createOverlay('ion-picker', options);\n    }\n    /**\n     * Dismiss the open picker overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the picker.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the picker.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the picker to dismiss. If an id is not provided, it will dismiss the most recently opened picker.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-picker', id);\n    }\n    /**\n     * Get the most recently opened picker overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-picker');\n    }\n};\n\nconst PopoverController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a popover overlay with popover options.\n     *\n     * @param options The options to use to create the popover.\n     */\n    create(options) {\n        return createOverlay('ion-popover', options);\n    }\n    /**\n     * Dismiss the open popover overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the popover.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the popover.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     * @param id The id of the popover to dismiss. If an id is not provided, it will dismiss the most recently opened popover.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-popover', id);\n    }\n    /**\n     * Get the most recently opened popover overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-popover');\n    }\n};\n\nconst ToastController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Create a toast overlay with toast options.\n     *\n     * @param options The options to use to create the toast.\n     */\n    create(options) {\n        return createOverlay('ion-toast', options);\n    }\n    /**\n     * Dismiss the open toast overlay.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the toast. For example, 'cancel' or 'backdrop'.\n     * @param id The id of the toast to dismiss. If an id is not provided, it will dismiss the most recently opened toast.\n     */\n    dismiss(data, role, id) {\n        return dismissOverlay(document, data, role, 'ion-toast', id);\n    }\n    /**\n     * Get the most recently opened toast overlay.\n     */\n    async getTop() {\n        return getOverlay(document, 'ion-toast');\n    }\n};\n\nexport { ActionSheetController as ion_action_sheet_controller, AlertController as ion_alert_controller, Anchor as ion_anchor, LoadingController as ion_loading_controller, ModalController as ion_modal_controller, PickerController as ion_picker_controller, PopoverController as ion_popover_controller, ToastController as ion_toast_controller };\n"],"sourceRoot":"webpack:///","file":"0-es5.js"}