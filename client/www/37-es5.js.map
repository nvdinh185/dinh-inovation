{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-menu_4-ios.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, c as getIonMode, d as createEvent, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport { b as config } from './config-3c7f3790.js';\nimport { i as isEndSide, b as assert, c as clamp } from './helpers-46f4a262.js';\nimport './animation-af478fe9.js';\nimport { GESTURE_CONTROLLER } from './index-624eea58.js';\nimport { m as menuController } from './index-1e5940d5.js';\nimport { c as createColorClasses } from './theme-18cbe2cc.js';\nimport { g as getTimeGivenProgression, P as Point } from './cubic-bezier-2812fda3.js';\n\nconst Menu = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.mode = getIonMode(this);\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        /**\n         * If `true`, the menu is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Which side of the view the menu should be placed.\n         */\n        this.side = 'start';\n        /**\n         * If `true`, swiping the menu is enabled.\n         */\n        this.swipeGesture = true;\n        /**\n         * The edge threshold for dragging the menu open.\n         * If a drag/swipe happens over this value, the menu is not triggered.\n         */\n        this.maxEdgeStart = 50;\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        if (this.type === undefined) {\n            this.type = config.get('menuType', this.mode === 'ios' ? 'reveal' : 'overlay');\n        }\n        const el = this.el;\n        const parent = el.parentNode;\n        if (this.contentId === undefined) {\n            console.warn(`[DEPRECATED][ion-menu] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\nBEFORE:\n  <ion-menu>...</ion-menu>\n  <div main>...</div>\n\nAFTER:\n  <ion-menu contentId=\"my-content\"></ion-menu>\n  <div id=\"my-content\">...</div>\n`);\n        }\n        const content = this.contentId !== undefined\n            ? document.getElementById(this.contentId)\n            : parent && parent.querySelector && parent.querySelector('[main]');\n        if (!content || !content.tagName) {\n            // requires content element\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.gesture = (await import('./index-624eea58.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            canStart: ev => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    async componentDidLoad() {\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        this.updateState();\n    }\n    disconnectedCallback() {\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        this.isPaneVisible = ev.detail.isPane(this.el);\n        this.updateState();\n    }\n    onBackdropClick(ev) {\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = (ev.composedPath)\n                ? !ev.composedPath().includes(this.menuInnerEl)\n                : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return menuController._setOpen(this, shouldOpen, animated);\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        if (width === this.width && this.animation !== undefined) {\n            return;\n        }\n        this.width = width;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        this.animation = await menuController._createAnimation(this.type, this);\n        if (!config.getBoolean('animated', true)) {\n            this.animation.duration(0);\n        }\n        this.animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const ani = this.animation\n            .direction((isReversed) ? 'reverse' : 'normal')\n            .easing((isReversed) ? 'cubic-bezier(0.4, 0.0, 0.6, 1)' : 'cubic-bezier(0.0, 0.0, 0.2, 1)');\n        if (animated) {\n            await ani.playAsync();\n        }\n        else {\n            ani.playSync();\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        if (!this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n            // TODO error\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation\n            .direction((this._isOpen) ? 'reverse' : 'normal')\n            .progressStart(true);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.timeStamp;\n        // Account for rounding errors in JS\n        let newStepValue = (shouldComplete) ? 0.001 : -0.001;\n        /**\n         * TODO: stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         * Not sure if the negative step value is an error or not\n         */\n        const adjustedStepValue = (stepValue <= 0) ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(0.4, 0), new Point(0.6, 1), new Point(1, 1), clamp(0, adjustedStepValue, 1));\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n            .progressEnd(shouldComplete ? 1 : 0, newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        assert(this.isAnimating, '_before() should be called while animating');\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // add css class\n            if (this.contentEl) {\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n        }\n        else {\n            // remove css classes\n            this.el.classList.remove(SHOW_MENU);\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit();\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.setDisabled(!isActive || !this.swipeGesture);\n        }\n        // Close menu immediately\n        if (!isActive && this._isOpen) {\n            // close if this menu is open, and should not be enabled\n            this.forceClosing();\n        }\n        if (!this.disabled) {\n            menuController._setActiveMenu(this);\n        }\n        assert(!this.isAnimating, 'can not be animating');\n    }\n    forceClosing() {\n        assert(this._isOpen, 'menu cannot be closed');\n        this.isAnimating = true;\n        const ani = this.animation.direction('reverse');\n        ani.playSync();\n        this.afterAnimation(false);\n    }\n    render() {\n        const { isEndSide, type, disabled, mode, isPaneVisible } = this;\n        return (h(Host, { role: \"navigation\", class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                'menu-side-end': isEndSide,\n                'menu-side-start': !isEndSide,\n                'menu-pane-visible': isPaneVisible\n            } }, h(\"div\", { class: \"menu-inner\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n    static get style() { return \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color,#fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,0,0);transform:translate3d(-9999px,0,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host-context([dir=rtl]) .menu-inner,[dir=rtl] .menu-inner{left:unset;right:unset;left:auto;right:0;-webkit-transform:translate3d(calc(-1 * -9999px),0,0);transform:translate3d(calc(-1 * -9999px),0,0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto}ion-backdrop{display:none;opacity:.01;z-index:-1}\\@media (max-width:340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translateZ(0);transform:translateZ(0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none!important;transform:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}:host(.menu-pane-visible) ion-backdrop{display:hidden!important}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\"; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n\n// Given a menu, return whether or not the menu toggle should be visible\r\nconst updateVisibility = async (menu) => {\r\n    const menuEl = await menuController.get(menu);\r\n    return !!(menuEl && await menuEl.isActive());\r\n};\n\nconst MenuButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the user cannot interact with the menu button.\n         */\n        this.disabled = false;\n        /**\n         * Automatically hides the menu button when the corresponding menu is not active\n         */\n        this.autoHide = true;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.onClick = async () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    componentDidLoad() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const { color, disabled } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', 'menu');\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type\n        };\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(color)), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'ion-activatable': true, 'ion-focusable': true }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\" }), h(\"slot\", null, h(\"ion-icon\", { icon: menuIcon, mode: mode, lazy: false })), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n    }\n    static get style() { return \":host{--background:transparent;--color-focused:var(--color);--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:.5;pointer-events:none}\\@media (any-hover:hover){:host(:hover) .button-native{background:var(--background-hover);color:var(--color-hover)}}:host(.ion-focused) .button-native{background:var(--background-focused);color:var(--color-focused)}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host-context(ion-toolbar:not(.ion-color)){color:var(--ion-toolbar-color,var(--color))}:host{--background-focused:rgba(var(--ion-color-primary-rgb,56,128,255),0.1);--border-radius:4px;--color:var(--ion-color-primary,#3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.activated){opacity:.4}\\@media (any-hover:hover){:host(:hover){opacity:.6}}:host(.ion-color.ion-focused) .button-native{background:rgba(var(--ion-color-base-rgb),.1)}\"; }\n};\n\nconst MenuController = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    /**\n     * Open the menu. If a menu is not provided then it will open the first\n     * menu found. If the specified menu is `start` or `end`, then it will open\n     * the enabled menu on that side. Otherwise, it will try to find the menu\n     * using the menu's `id` property. If a menu is not found then it will\n     * return `false`.\n     *\n     * @param menu The menuId or side of the menu to open.\n     */\n    open(menu) {\n        return menuController.open(menu);\n    }\n    /**\n     * Close the menu. If a menu is specified, it will close that menu.\n     * If no menu is specified, then it will close any menu that is open.\n     * If it does not find any open menus, it will return `false`.\n     *\n     * @param menu The menuId or side of the menu to close.\n     */\n    close(menu) {\n        return menuController.close(menu);\n    }\n    /**\n     * Toggle the menu open or closed. If the menu is already open, it will try to\n     * close the menu, otherwise it will try to open it. Returns `false` if\n     * a menu is not found.\n     *\n     * @param menu The menuId or side of the menu to toggle.\n     */\n    toggle(menu) {\n        return menuController.toggle(menu);\n    }\n    /**\n     * Enable or disable a menu. Disabling a menu will not allow gestures\n     * for that menu or any calls to open it. This is useful when there are\n     * multiple menus on the same side and only one of them should be allowed\n     * to open. Enabling a menu will automatically disable all other menus\n     * on that side.\n     *\n     * @param enable If `true`, the menu should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable.\n     */\n    enable(enable, menu) {\n        return menuController.enable(enable, menu);\n    }\n    /**\n     * Enable or disable the ability to swipe open the menu.\n     *\n     * @param enable If `true`, the menu swipe gesture should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable the swipe gesture on.\n     */\n    swipeGesture(enable, menu) {\n        return menuController.swipeGesture(enable, menu);\n    }\n    /**\n     * Get whether or not the menu is open. Returns `true` if the specified\n     * menu is open. If a menu is not specified, it will return `true` if\n     * any menu is currently open.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    isOpen(menu) {\n        return menuController.isOpen(menu);\n    }\n    /**\n     * Get whether or not the menu is enabled. Returns `true` if the\n     * specified menu is enabled. Returns `false` if a menu is disabled\n     * or not found.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    isEnabled(menu) {\n        return menuController.isEnabled(menu);\n    }\n    /**\n     * Get a menu instance. If a menu is not provided then it will return the first\n     * menu found. If the specified menu is `start` or `end`, then it will return the\n     * enabled menu on that side. Otherwise, it will try to find the menu using the menu's\n     * `id` property. If a menu is not found then it will return `null`.\n     *\n     * @param menu The menuId or side of the menu.\n     */\n    get(menu) {\n        return menuController.get(menu);\n    }\n    /**\n     * Get the instance of the opened menu. Returns `null` if a menu is not found.\n     */\n    getOpen() {\n        return menuController.getOpen();\n    }\n    /**\n     * Get all menu instances.\n     */\n    getMenus() {\n        return menuController.getMenus();\n    }\n    /**\n     * Get whether or not a menu is animating. Returns `true` if any\n     * menu is currently animating.\n     */\n    isAnimating() {\n        return menuController.isAnimating();\n    }\n    /**\n     * Registers a new animation that can be used with any `ion-menu` by\n     * passing the name of the animation in its `type` property.\n     *\n     * @param name The name of the animation to register.\n     * @param animation The animation function to register.\n     */\n    async registerAnimation(name, animation) {\n        return menuController.registerAnimation(name, animation);\n    }\n};\n\nconst MenuToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * Automatically hides the content when the corresponding menu is not active.\n         *\n         * By default, it's `true`. Change it to `false` in order to\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\n         */\n        this.autoHide = true;\n        this.onClick = () => {\n            return menuController.toggle(this.menu);\n        };\n    }\n    connectedCallback() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", null)));\n    }\n    static get style() { return \":host(.menu-toggle-hidden){display:none}\"; }\n};\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuController as ion_menu_controller, MenuToggle as ion_menu_toggle };\n"],"sourceRoot":"webpack:///","file":"37-es5.js"}