{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-radio_2-md.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { f as findItemLabel } from './helpers-46f4a262.js';\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\nimport { f as findCheckedOption, w as watchForOptions } from './watch-options-2af96011.js';\n\nconst Radio = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-rb-${radioButtonIds++}`;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot interact with the radio.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the radio is selected.\n         */\n        this.checked = false;\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.onClick = () => {\n            if (this.checked) {\n                this.ionDeselect.emit();\n            }\n            else {\n                this.checked = true;\n            }\n        };\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n        this.ionDeselect = createEvent(this, \"ionDeselect\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    }\n    colorChanged() {\n        this.emitStyle();\n    }\n    checkedChanged(isChecked) {\n        if (isChecked) {\n            this.ionSelect.emit({\n                checked: true,\n                value: this.value\n            });\n        }\n        this.emitStyle();\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    componentWillLoad() {\n        if (this.value === undefined) {\n            this.value = this.inputId;\n        }\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'radio-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    render() {\n        const { inputId, disabled, checked, color, el } = this;\n        const mode = getIonMode(this);\n        const labelId = inputId + '-lbl';\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { onClick: this.onClick, role: \"radio\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'interactive': true, 'radio-checked': checked, 'radio-disabled': disabled }) }, h(\"div\", { class: \"radio-icon\" }, h(\"div\", { class: \"radio-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"color\": [\"colorChanged\"],\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n    static get style() { return \":host{display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;contain:layout size style}.radio-icon,button{width:100%;height:100%}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color:var(--ion-color-step-400,#999);--color-checked:var(--ion-color-primary,#3880ff);--border-width:2px;--border-style:solid;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:50%;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:50%;width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0,0,0);transform:scale3d(0,0,0);-webkit-transition:-webkit-transform .28s cubic-bezier(.4,0,.2,1);transition:-webkit-transform .28s cubic-bezier(.4,0,.2,1);transition:transform .28s cubic-bezier(.4,0,.2,1);transition:transform .28s cubic-bezier(.4,0,.2,1),-webkit-transform .28s cubic-bezier(.4,0,.2,1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scaleX(1);transform:scaleX(1)}:host(.radio-disabled){opacity:.3}:host(.ion-focused) .radio-icon:after{border-radius:50%;left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint,#4c8dff);content:\\\"\\\";opacity:.2}:host-context([dir=rtl]).ion-focused .radio-icon:after,:host-context([dir=rtl]):host(.ion-focused) .radio-icon:after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\"; }\n};\nlet radioButtonIds = 0;\n\nconst RadioGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-rg-${radioGroupIds++}`;\n        this.labelId = `${this.inputId}-lbl`;\n        /**\n         * If `true`, the radios can be deselected.\n         */\n        this.allowEmptySelection = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        this.onSelect = (ev) => {\n            const selectedRadio = ev.target;\n            if (selectedRadio) {\n                this.value = selectedRadio.value;\n            }\n        };\n        this.onDeselect = (ev) => {\n            const selectedRadio = ev.target;\n            if (selectedRadio) {\n                selectedRadio.checked = false;\n                this.value = undefined;\n            }\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n    }\n    valueChanged(value) {\n        this.updateRadios();\n        this.ionChange.emit({ value });\n    }\n    async connectedCallback() {\n        // Get the list header if it exists and set the id\n        // this is used to set aria-labelledby\n        const el = this.el;\n        const header = el.querySelector('ion-list-header') || el.querySelector('ion-item-divider');\n        if (header) {\n            const label = header.querySelector('ion-label');\n            if (label) {\n                this.labelId = label.id = this.name + '-lbl';\n            }\n        }\n        if (this.value === undefined) {\n            const radio = findCheckedOption(el, 'ion-radio');\n            if (radio !== undefined) {\n                await radio.componentOnReady();\n                if (this.value === undefined) {\n                    this.value = radio.value;\n                }\n            }\n        }\n        this.mutationO = watchForOptions(el, 'ion-radio', newOption => {\n            if (newOption !== undefined) {\n                newOption.componentOnReady().then(() => {\n                    this.value = newOption.value;\n                });\n            }\n            else {\n                this.updateRadios();\n            }\n        });\n        this.updateRadios();\n    }\n    disconnectedCallback() {\n        if (this.mutationO) {\n            this.mutationO.disconnect();\n            this.mutationO = undefined;\n        }\n    }\n    async updateRadios() {\n        /**\n         * Make sure we get all radios first\n         * so values are up to date prior\n         * to caching the radio group value\n         */\n        const radios = await this.getRadios();\n        const { value } = this;\n        let hasChecked = false;\n        // Walk the DOM in reverse order, since the last selected one wins!\n        for (const radio of radios) {\n            if (!hasChecked && radio.value === value) {\n                // correct value for this radio\n                // but this radio isn't checked yet\n                // and we haven't found a checked yet\n                hasChecked = true;\n                radio.checked = true;\n            }\n            else {\n                // this radio doesn't have the correct value\n                // or the radio group has been already checked\n                radio.checked = false;\n            }\n        }\n        // Reset value if\n        if (!hasChecked) {\n            this.value = undefined;\n        }\n    }\n    getRadios() {\n        return Promise.all(Array\n            .from(this.el.querySelectorAll('ion-radio'))\n            .map(r => r.componentOnReady()));\n    }\n    render() {\n        return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": this.labelId, onIonSelect: this.onSelect, onIonDeselect: this.allowEmptySelection ? this.onDeselect : undefined, class: getIonMode(this) }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"],"sourceRoot":"webpack:///","file":"47-es5.js"}