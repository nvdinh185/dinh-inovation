{"version":3,"sources":["src/app/chatbot/chat-bot/chat-bot.page.html","src/app/chatbot/chat-bot/chat-bot-routing.module.ts","src/app/chatbot/chat-bot/chat-bot.module.ts","src/app/chatbot/chat-bot/chat-bot.page.scss","src/app/chatbot/chat-bot/chat-bot.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-title>AI-Trò chuyên với máy</ion-title>\\n\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-item lines=\\\"none\\\" class=\\\"idea-created\\\">\\n    <ion-avatar slot=\\\"start\\\">\\n      <img src=\\\"{{chatbot?.avatar}}\\\">\\n    </ion-avatar>\\n    <ion-label class=\\\"ion-text-wrap\\\">\\n      <strong slot=\\\"start\\\">\\n        {{chatbot?.username}}\\n      </strong>\\n      <br>\\n      {{chatbot?.fullname}}\\n      <br>\\n      <ion-note>{{chatbot?.created_time | timeAgo}}</ion-note>\\n    </ion-label>\\n    <ion-button (click)=\\\"onClickMore($event)\\\" slote=\\\"end\\\" shape=\\\"round\\\" fill=\\\"clear\\\" size=\\\"small\\\">\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"ios-more\\\"></ion-icon>\\n    </ion-button>\\n  </ion-item>\\n\\n\\n\\n  <!-- Nhập nội dung câu hỏi yêu cầu cho máy -->\\n  <ion-card *ngIf=\\\"!isRepairing\\\" class=\\\"input-comment\\\">\\n    <ion-item lines=\\\"none\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"{{(userInfo?.avatar?userInfo.avatar:'assets/imgs/avatar.jpg')}}\\\">\\n      </ion-avatar>\\n      <ion-textarea autosize type=\\\"text\\\" placeholder=\\\"Bạn có yêu cầu gì?\\\" [(ngModel)]=\\\"message\\\"\\n        (keyup.enter)=\\\"keyInput()\\\">\\n      </ion-textarea>\\n      <ion-button color=\\\"{{(message?'secondary':'light')}}\\\" (click)=\\\"onClickSend()\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"send\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n  </ion-card>\\n\\n  <!-- Lịch sử chatbot ở đây -->\\n  <ion-list class=\\\"comment-list\\\">\\n    <!-- Hiển thị khi người dùng vừa gõ enter gửi đi máy chủ chưa trả lời -->\\n    <div *ngIf=\\\"!conversion?.response && !isRepairing && conversion?.request\\\">\\n      <ion-item lines=\\\"none\\\">\\n        <ion-avatar slot=\\\"end\\\">\\n          <img src=\\\"{{(userInfo?.avatar?userInfo.avatar:'assets/imgs/avatar.jpg')}}\\\">\\n        </ion-avatar>\\n        <ion-label class=\\\"ion-text-wrap user-backgound\\\">\\n          <strong slot=\\\"start\\\">\\n            {{userInfo?.fullname}}\\n          </strong>\\n          <br>\\n          <ion-label class=\\\"ion-text-wrap\\\">\\n            <div [innerHTML]=\\\"conversion.request | newline | safe\\\"></div>\\n          </ion-label>\\n        </ion-label>\\n      </ion-item>\\n      <ion-note [style.padding-left]=\\\"'100px'\\\"> {{conversion?.created_time | timeAgo}} </ion-note>\\n    </div>\\n\\n    <!-- Nhập nội dung trả lời sửa lại -->\\n    <ion-card *ngIf=\\\"isRepairing\\\" class=\\\"input-train\\\">\\n\\n      <!-- Nút đóng không chỉnh sửa nằm ở góc trái trên cùng -->\\n      <div class='close-button' tappable>\\n\\t\\t\\t\\t<ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\" color=\\\"danger\\\" (click)=\\\"onClickClose()\\\"></ion-icon>\\n      </div>\\n\\n      <ion-item color=\\\"primary\\\">\\n        <ion-label color=\\\"light\\\">DẠY CHO MÁY:</ion-label>\\n      </ion-item>\\n\\n      <!-- Hiển thị lại nội dung câu hỏi của bạn -->\\n      <ion-item>\\n        <ion-avatar slot=\\\"end\\\">\\n          <img src=\\\"{{(userInfo?.avatar?userInfo.avatar:'assets/imgs/avatar.jpg')}}\\\">\\n        </ion-avatar>\\n        <ion-label class=\\\"ion-text-wrap user-backgound\\\">\\n          <strong slot=\\\"start\\\">\\n            {{userInfo?.fullname}}\\n          </strong>\\n          <br>\\n          <ion-label class=\\\"ion-text-wrap\\\">\\n            <div [innerHTML]=\\\"conversion?.request | newline | safe\\\"></div>\\n          </ion-label>\\n        </ion-label>\\n      </ion-item>\\n\\n      <!-- Lựa chọn ý định hoặc nhập ý định -->\\n      <ion-item class=\\\"background-item-round\\\">\\n        <ion-icon slot=\\\"start\\\" color=\\\"primary\\\" name=\\\"logo-reddit\\\"></ion-icon>\\n        <ion-label position=\\\"stacked\\\" class=\\\"ion-text-wrap\\\" color=\\\"{{(conversion.invalid?'danger':'')}}\\\"\\n          style=\\\"text-align: justify;\\\">\\n          Ý định này là gì?(*)\\n        </ion-label>\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Nhập ý định\\\" [(ngModel)]=\\\"conversion.intent_name\\\"></ion-input>\\n      </ion-item>\\n\\n      <!-- Nhập câu trả lời -->\\n      <ion-item>\\n        <ion-label class=\\\"form-title-item\\\" color=\\\"tertiary\\\">Câu trả lời dạy cho máy (*):</ion-label>\\n      </ion-item>\\n      <ion-item class=\\\"background-item-round\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <img src=\\\"{{chatbot?.avatar}}\\\">\\n        </ion-avatar>\\n        <ion-textarea autosize type=\\\"text\\\" placeholder=\\\"Nhập câu trả lời\\\" color=\\\"{{(conversion?.response?'':'danger')}}\\\"\\n          [(ngModel)]=\\\"conversion.response\\\">\\n        </ion-textarea>\\n        <ion-button color=\\\"{{(conversion?.response?'danger':'light')}}\\\" (click)=\\\"onClickRepair()\\\" fill=\\\"clear\\\"\\n          shape=\\\"round\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"save\\\"></ion-icon>\\n        </ion-button>\\n      </ion-item>\\n\\n\\n\\n    </ion-card>\\n\\n    <!-- Khi máy chủ trả lời thì mặt nhiên nó sẽ ẩn đi và thông tin trả lời đã hiển thị ở mảng rồi -->\\n    <div *ngFor=\\\"let comment of conversations\\\">\\n\\n      <div *ngIf=\\\"comment?.response && (!isRepairing || conversion.created_time !== comment.created_time)\\\">\\n        <ion-item lines=\\\"none\\\">\\n          <ion-avatar slot=\\\"start\\\">\\n            <img src=\\\"{{chatbot?.avatar}}\\\">\\n          </ion-avatar>\\n          <ion-label class=\\\"ion-text-wrap bot-backgound\\\">\\n            <strong slot=\\\"start\\\">\\n              {{chatbot?.username}}\\n            </strong>\\n            <br>\\n            <ion-label class=\\\"ion-text-wrap\\\">\\n              <div [innerHTML]=\\\"comment.response | newline | safe\\\"></div>\\n            </ion-label>\\n          </ion-label>\\n          <!-- Nút này chỉ xuất hiện ở câu chat cuối thôi nhé -->\\n          <ion-button *ngIf=\\\"conversion.created_time === comment.created_time\\\" (click)=\\\"onClickRepair()\\\" slote=\\\"end\\\"\\n            shape=\\\"round\\\" fill=\\\"clear\\\" size=\\\"small\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"{{isRepairing?'save':'ios-create'}}\\\"\\n              color=\\\"{{isRepairing?'danger':'secondary'}}\\\"></ion-icon>\\n          </ion-button>\\n        </ion-item>\\n      </div>\\n\\n      <div *ngIf=\\\"comment?.request && (!isRepairing || conversion.created_time !== comment.created_time)\\\">\\n        <ion-item lines=\\\"none\\\">\\n          <ion-avatar slot=\\\"end\\\">\\n            <img src=\\\"{{(userInfo?.avatar?userInfo.avatar:'assets/imgs/avatar.jpg')}}\\\">\\n          </ion-avatar>\\n          <ion-label class=\\\"ion-text-wrap user-backgound\\\">\\n            <strong slot=\\\"start\\\">\\n              {{userInfo?.fullname}}\\n            </strong>\\n            <br>\\n            <ion-label class=\\\"ion-text-wrap\\\">\\n              <div [innerHTML]=\\\"comment.request | newline | safe\\\"></div>\\n            </ion-label>\\n          </ion-label>\\n        </ion-item>\\n        <ion-note [style.padding-left]=\\\"'100px'\\\"> {{comment.created_time | timeAgo}} </ion-note>\\n      </div>\\n    </div>\\n  </ion-list>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatBotPage } from './chat-bot.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatBotPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatBotPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatBotPageRoutingModule } from './chat-bot-routing.module';\n\nimport { ChatBotPage } from './chat-bot.page';\nimport { SharedModule } from 'src/app/shared.module';\nimport { Ngxi4DynamicServiceModule } from 'ngxi4-dynamic-service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    Ngxi4DynamicServiceModule,\n    ChatBotPageRoutingModule\n  ],\n  declarations: [ChatBotPage]\n})\nexport class ChatBotPageModule {}\n","export default \".file-over {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 2;\\n  width: 100%;\\n  height: 100%;\\n  opacity: 0;\\n  cursor: pointer;\\n}\\n\\n.idea-created {\\n  border-radius: 2em;\\n  opacity: 0.9;\\n  margin: 5px;\\n  border-style: solid;\\n  border-color: gray;\\n  border-width: 1px;\\n}\\n\\n.background-item-round {\\n  margin: 3px;\\n  border-radius: 1.5em;\\n}\\n\\n.input-comment {\\n  border-radius: 2em;\\n  opacity: 0.9;\\n  margin: 15px;\\n  border-style: solid;\\n  border-color: green;\\n  border-width: 1px;\\n  box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.5);\\n}\\n\\n.input-train {\\n  position: relative;\\n  border-radius: 2em;\\n  opacity: 0.9;\\n  margin: 15px;\\n  border-style: solid;\\n  border-color: red;\\n  border-width: 1px;\\n  box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.5);\\n}\\n\\n.input-train .close-button {\\n  position: absolute;\\n  z-index: 99;\\n  top: 0%;\\n  left: 90%;\\n  font-size: 45px;\\n}\\n\\n.bot-backgound {\\n  position: relative;\\n  margin-right: 10px;\\n  min-width: 10px;\\n  border-radius: 1em;\\n  opacity: 0.9;\\n  padding: 8px;\\n  background-color: #E5E4E9;\\n  color: #363636;\\n}\\n\\n.user-backgound {\\n  margin-left: 40px;\\n  min-width: 10px;\\n  border-radius: 1em;\\n  opacity: 0.7;\\n  padding: 8px;\\n  background-color: #2095FE;\\n  color: #fff;\\n  text-align: right;\\n}\\n\\n.comment-list {\\n  margin: 15px;\\n}\\n\\n.image-comment-size {\\n  max-width: 200px;\\n  margin: 2px;\\n  border-radius: 0.5em;\\n  border-style: solid;\\n  border-color: black;\\n  border-width: 1px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdW9uZ2RxL0lPTklDL20taW5vdmF0aW9uL2NsaWVudC9zcmMvYXBwL2NoYXRib3QvY2hhdC1ib3QvY2hhdC1ib3QucGFnZS5zY3NzIiwic3JjL2FwcC9jaGF0Ym90L2NoYXQtYm90L2NoYXQtYm90LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxVQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxVQUFBO0VBQ0EsZUFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREdBO0VBQ0ksV0FBQTtFQUNBLG9CQUFBO0FDQUo7O0FER0E7RUFFSSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsMkNBQUE7QUNESjs7QURLQTtFQUNJLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtFQUNBLDJDQUFBO0FDRko7O0FES0E7RUFDSSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxPQUFBO0VBQ0EsU0FBQTtFQUNBLGVBQUE7QUNGSjs7QURLQTtFQUNJLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLHlCQUFBO0VBQ0EsY0FBQTtBQ0ZKOztBREtBO0VBQ0ksaUJBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLHlCQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0FDRko7O0FETUE7RUFDSSxZQUFBO0FDSEo7O0FETUE7RUFDSSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxvQkFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtBQ0hKIiwiZmlsZSI6InNyYy9hcHAvY2hhdGJvdC9jaGF0LWJvdC9jaGF0LWJvdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmlsZS1vdmVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogMjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3BhY2l0eTogMDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5pZGVhLWNyZWF0ZWR7XG4gICAgYm9yZGVyLXJhZGl1czogMmVtO1xuICAgIG9wYWNpdHk6IDAuOTtcbiAgICBtYXJnaW46IDVweDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjogZ3JheTtcbiAgICBib3JkZXItd2lkdGg6IDFweDtcbn1cblxuXG4uYmFja2dyb3VuZC1pdGVtLXJvdW5kIHtcbiAgICBtYXJnaW46IDNweDtcbiAgICBib3JkZXItcmFkaXVzOiAxLjVlbTtcbn1cblxuLmlucHV0LWNvbW1lbnR7XG4gICAgLy8gcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvcmRlci1yYWRpdXM6IDJlbTtcbiAgICBvcGFjaXR5OiAwLjk7XG4gICAgbWFyZ2luOiAxNXB4O1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLWNvbG9yOiBncmVlbjtcbiAgICBib3JkZXItd2lkdGg6IDFweDtcbiAgICBib3gtc2hhZG93OiAwcHggM3B4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG4vLyBLaOG7kWkgZOG6oXkgaOG7jWMgY2hvIG3DoXlcbi5pbnB1dC10cmFpbntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm9yZGVyLXJhZGl1czogMmVtO1xuICAgIG9wYWNpdHk6IDAuOTtcbiAgICBtYXJnaW46IDE1cHg7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItY29sb3I6IHJlZDtcbiAgICBib3JkZXItd2lkdGg6IDFweDtcbiAgICBib3gtc2hhZG93OiAwcHggM3B4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG4uaW5wdXQtdHJhaW4gLmNsb3NlLWJ1dHRvbntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogOTk7XG4gICAgdG9wOiAwJTtcbiAgICBsZWZ0OiA5MCU7XG4gICAgZm9udC1zaXplOiA0NXB4O1xufVxuXG4uYm90LWJhY2tnb3VuZHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIG1pbi13aWR0aDogMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxZW07XG4gICAgb3BhY2l0eTogMC45O1xuICAgIHBhZGRpbmc6IDhweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTVFNEU5O1xuICAgIGNvbG9yOiAjMzYzNjM2O1xufVxuXG4udXNlci1iYWNrZ291bmR7XG4gICAgbWFyZ2luLWxlZnQ6IDQwcHg7XG4gICAgbWluLXdpZHRoOiAxMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDFlbTtcbiAgICBvcGFjaXR5OiAwLjc7XG4gICAgcGFkZGluZzogOHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMDk1RkU7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cblxuLmNvbW1lbnQtbGlzdHtcbiAgICBtYXJnaW46IDE1cHg7XG59XG5cbi5pbWFnZS1jb21tZW50LXNpemV7XG4gICAgbWF4LXdpZHRoOiAyMDBweDtcbiAgICBtYXJnaW46IDJweDtcbiAgICBib3JkZXItcmFkaXVzOiAwLjVlbTtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjpibGFjaztcbiAgICBib3JkZXItd2lkdGg6IDFweDtcbn0iLCIuZmlsZS1vdmVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9wYWNpdHk6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmlkZWEtY3JlYXRlZCB7XG4gIGJvcmRlci1yYWRpdXM6IDJlbTtcbiAgb3BhY2l0eTogMC45O1xuICBtYXJnaW46IDVweDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLWNvbG9yOiBncmF5O1xuICBib3JkZXItd2lkdGg6IDFweDtcbn1cblxuLmJhY2tncm91bmQtaXRlbS1yb3VuZCB7XG4gIG1hcmdpbjogM3B4O1xuICBib3JkZXItcmFkaXVzOiAxLjVlbTtcbn1cblxuLmlucHV0LWNvbW1lbnQge1xuICBib3JkZXItcmFkaXVzOiAyZW07XG4gIG9wYWNpdHk6IDAuOTtcbiAgbWFyZ2luOiAxNXB4O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6IGdyZWVuO1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgYm94LXNoYWRvdzogMHB4IDNweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLmlucHV0LXRyYWluIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiAyZW07XG4gIG9wYWNpdHk6IDAuOTtcbiAgbWFyZ2luOiAxNXB4O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6IHJlZDtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIGJveC1zaGFkb3c6IDBweCAzcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNSk7XG59XG5cbi5pbnB1dC10cmFpbiAuY2xvc2UtYnV0dG9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiA5OTtcbiAgdG9wOiAwJTtcbiAgbGVmdDogOTAlO1xuICBmb250LXNpemU6IDQ1cHg7XG59XG5cbi5ib3QtYmFja2dvdW5kIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIG1pbi13aWR0aDogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogMWVtO1xuICBvcGFjaXR5OiAwLjk7XG4gIHBhZGRpbmc6IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0U1RTRFOTtcbiAgY29sb3I6ICMzNjM2MzY7XG59XG5cbi51c2VyLWJhY2tnb3VuZCB7XG4gIG1hcmdpbi1sZWZ0OiA0MHB4O1xuICBtaW4td2lkdGg6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDFlbTtcbiAgb3BhY2l0eTogMC43O1xuICBwYWRkaW5nOiA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMDk1RkU7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLmNvbW1lbnQtbGlzdCB7XG4gIG1hcmdpbjogMTVweDtcbn1cblxuLmltYWdlLWNvbW1lbnQtc2l6ZSB7XG4gIG1heC13aWR0aDogMjAwcHg7XG4gIG1hcmdpbjogMnB4O1xuICBib3JkZXItcmFkaXVzOiAwLjVlbTtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService, CommonsService, PopoverCardComponent, DynamicFormMobilePage } from 'ngxi4-dynamic-service';\nimport { MainService } from 'src/app/services/main.service';\n\n@Component({\n  selector: 'app-chat-bot',\n  templateUrl: './chat-bot.page.html',\n  styleUrls: ['./chat-bot.page.scss'],\n})\nexport class ChatBotPage implements OnInit {\n\n  chatbot: any = {\n    avatar: \"assets/imgs/avatar-ai.jpg\",\n    username: \"AI-NLP-Mobifone-C3\",\n    fullname: \"Tôi là máy học, tôi đang ở độ tuổi đi học, bạn hãy dạy cho tôi học nhé!\",\n    created_time: Date.now()\n  };\n\n  userInfo: any;\n  message: string;\n\n  conversion: any = {};\n\n  conversations = [];\n\n  isRepairing: boolean = false;\n  answer: string;\n\n  constructor(\n    private route: ActivatedRoute\n    , private apiCommons: CommonsService\n    , private apiAuth: AuthService\n    , private mainService: MainService\n  ) { }\n\n  ngOnInit() {\n    this.init();\n\n    this.route.queryParams.subscribe(item => {\n      this.refresh(item)\n    });\n  }\n\n  // đọc dữ liệu user\n  init() {\n    this.userInfo = this.mainService.getUserInfo();\n  }\n\n  // làm mới trang\n  refresh(item) {\n    this.apiAuth.postDynamicJson(this.apiAuth.serviceUrls.SOCKET_SERVER + '/request-answer'\n      , {\n        message: 'Xin chào'\n      }\n      , true)\n      .then(answer => {\n        if (answer && answer.status === \"OK\") {\n          // ban đầu máy sẽ tự động trả lời theo câu chào hỏi ban đầu\n          this.conversations.unshift({\n            response: answer.message,\n            created_time: Date.now()\n          })\n        }\n      })\n      .catch(err => console.log('Lỗi lấy chi tiết', err))\n  }\n\n  // Gửi nội dung comment đi bằng nút bấm\n  onClickSend() {\n    if (this.message) {\n      this.message = this.message.replace(/\\r?\\n|\\r/g, '')\n      if (this.message.length > 0) {\n        // khai báo bản ghi người hỏi\n        this.conversion = {\n          request: this.message,\n          created_time: Date.now()\n        }\n        this.apiAuth.postDynamicJson(this.apiAuth.serviceUrls.SOCKET_SERVER + '/request-answer'\n          , {\n            message: this.message\n          }\n          , true)\n          .then(answer => {\n            if (answer && answer.status === \"OK\") {\n              // ghi nhận bảng ghi máy trả lời\n              this.conversations.unshift({\n                request: this.conversion.request,\n                response: answer.message,\n                created_time: this.conversion.created_time\n              })\n              // muốn sửa câu trả lời thì sửa ngay cái đối tượng này\n              // thì gán đối tượng đàm thoại bằng bảng ghi cuối cùng để sửa\n              this.conversion = this.conversations[0]\n            }\n            this.message = ''\n          })\n          .catch(err => {\n            console.log(err);\n            this.message = ''\n          })\n        this.message = ''\n      }\n    }\n  }\n\n  // khi bấm enter để gửi lệnh\n  keyInput() {\n    this.onClickSend();\n  }\n\n  // bấm vào menu\n  onClickMore(evt) {\n\n    const allMenu = [\n      //  chỉ cho admin 98,99 và user_id của ý tưởng trùng với nó\n      // Cho tất cả mọi người trừ userInfo==idea\n      {\n        id: 1\n        , name: \"Giảng bài cho máy\"\n        , value: \"EDIT-INTENT\"\n        , icon: {\n          name: \"create\"\n          , color: \"success\"\n        }\n      }\n      ,\n      {\n        id: 2\n        , name: \"Kiểm tra độ chính xác\"\n        , value: \"VIEW-PROB\"\n        , icon: {\n          name: \"checkmark-circle\"\n          , color: \"secondary\"\n        }\n      },\n      {\n        id: 3\n        , name: \"Huấn luyện cho máy\"\n        , value: \"TRAIN\"\n        , icon: {\n          name: \"microphone\"\n          , color: \"warning\"\n        }\n      }\n    ]\n\n    // Nếu user không login thì không cho chạy huấn luyện\n    if (!this.userInfo) {\n      allMenu.splice(2, 1)\n    }\n\n    if (!this.conversion || !this.conversion.request) {\n      allMenu.splice(1, 1)\n    }\n\n\n    this.apiCommons.presentPopover(\n      evt\n      , PopoverCardComponent\n      , {\n        type: 'single-choice',\n        title: \"Tác vụ\",\n        color: \"primary\",\n        menu: allMenu\n      })\n      .then(data => {\n        this.processDetails(data);\n      })\n      .catch(err => {\n        // console.log('err: ', err);\n      });\n  }\n\n  // Thực thi lệnh của end user chọn menu setting\n  processDetails(itemOrItems: any) {\n    let cmd = itemOrItems.value;\n    // thực hiện gọi hàm huấn luyện\n    // kết quả huấn luyện thành công sẽ mở cửa sổ alert\n    if (cmd === 'TRAIN') {\n      // kiểm tra user đã đánh giá hay chưa\n      this.apiCommons.showLoader('Đang huấn luyện cho máy vui lòng đợi...')\n      this.apiAuth.postDynamicJson(this.apiAuth.serviceUrls.SOCKET_SERVER + \"/run-train\"\n        , { command: 'run-train' }, true)\n        .then(result => {\n          this.apiCommons.hideLoader()\n          this.apiCommons.showToast(result && result.message ? result.message : 'Đã huấn luyện thành công, bạn có thể test thử nhé', 2000, 'success')\n        })\n        .catch(err => {\n          // console.log('err', err);\n          this.apiCommons.hideLoader()\n          this.apiCommons.showToast(err && err.message ? err.message : 'Lỗi huấn luyện cho máy', 3000, 'danger')\n        })\n    }\n\n    // truy vấn xác suất của câu hỏi vừa mới đưa lên\n    // kết quả trả về hiển thị lên màn hình popup\n    if (cmd === 'VIEW-PROB') {\n      this.checkProbRequest()\n    }\n\n    // mở trang intent câu hỏi và câu trả lời\n    if (cmd === 'EDIT-INTENT') {\n\n    }\n\n  }\n\n  // sửa câu trả lời\n  // thì hiển thị câu trả lời ngay ở dưới ô\n  onClickRepair() {\n    if (this.isRepairing && (!this.conversion.response || !this.conversion.intent_name)) {\n      // yêu cầu nhập đủ ý định và đáp ứng mới cho lưu được\n      this.conversion.invalid = true;\n      return;\n    }\n\n    // nếu yêu cầu lưu trữ thông tin đã chỉnh sửa\n    if (this.isRepairing && this.conversion.request && this.conversion.response && this.conversion.intent_name) {\n      // console.log(this.conversion);\n      // các thông tin đã đầy đủ thì post lên máy chủ và trả kết quả về\n      this.apiAuth.postDynamicJson(this.apiAuth.serviceUrls.SOCKET_SERVER + \"/train-answer\"\n        , {\n          request: this.conversion.request,\n          response: this.conversion.response,\n          intent_name: this.conversion.intent_name\n        }, true)\n        .then(result => {\n          // console.log('data', result);\n          this.apiCommons.showToast(result && result.message ? result.message : 'Soạn bài giảng cho máy thành công', 2000, 'success')\n        })\n        .catch(err => {\n          // console.log('err', err);\n          this.apiCommons.showToast(err && err.message ? err.message : 'Lỗi soạn bài giảng cho máy', 3000, 'danger')\n        })\n    }\n    this.isRepairing = !this.isRepairing;\n  }\n\n\n  // Đóng cửa sổ huấn luyện\n  onClickClose() {\n    this.isRepairing = false;\n  }\n\n\n  /**\n   * Gửi lệnh lênh máy chủ thông tin yêu cầu, máy chủ trả về 3 chuỗi xác suất nhé\n   */\n  checkProbRequest() {\n\n    this.apiAuth.getDynamicUrl(this.apiAuth.serviceUrls.SOCKET_SERVER + \"/get-predict?message=\" + this.conversion.request, true)\n      .then(results => {\n        this.showResultCheck(results);\n      })\n      .catch(err => {\n        this.apiCommons.showToast(err && err.message ? err.message : 'Lỗi kiểm tra xác suất', 3000, 'danger')\n      })\n  }\n\n\n  showResultCheck(results) {\n\n    let details: any = {\n      type: \"details\",\n      details: []\n    }\n\n    let title = \"Câu nói: \";\n\n    for (let idx = 0; idx < results.length; idx++) {\n      let el = results[idx];\n      if (idx === 0) title += el.text;\n      details.details.push({\n        name: (el.intent && el.intent.name ? el.intent.id + \"# \" + el.intent.name : el.label),\n        value: (el.value * 100).toFixed(2) + \"%\"\n      })\n    }\n\n    let form = {\n      title: 'Hệ thống tìm thấy'\n      , buttons: [\n        { color: 'danger', icon: 'close', next: 'CLOSE' }\n      ]\n      , items: [\n        { type: 'title', name: title }\n        , details\n      ]\n    }\n\n    // call popup window for form login\n    this.apiCommons.openModal(DynamicFormMobilePage,\n      {\n        parent: this,\n        callback: this.callbackProcess,\n        form: form\n      }\n    );\n\n  }\n\n  /**\n   * Hàm gọi lại\n   */\n  callbackProcess = function (res) {\n    return new Promise<any>((resolve, reject) => {\n      if (res.error) {\n        this.apiCommons.presentAlert('Error:<br>' + (res.error.message != undefined ? res.error.message : res.message ? res.message : (\"Error Unknow: \" + JSON.stringify(res.error, null, 2))));\n      }\n      resolve({ next: \"CLOSE\" });\n    });\n  }.bind(this);\n\n}\n"],"sourceRoot":"webpack:///","file":"chatbot-chat-bot-chat-bot-module-es5.js"}